{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0","program":"/Users/novyjpolzovatel/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","convert_case","--edition=2018","/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=4b7e5832cc98b2c3","-C","extra-filename=-4b7e5832cc98b2c3","--out-dir","/Users/novyjpolzovatel/Desktop/deviceinfos/target/rls/debug/deps","-L","dependency=/Users/novyjpolzovatel/Desktop/deviceinfos/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/novyjpolzovatel/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/novyjpolzovatel/Desktop/deviceinfos/target/rls/debug/deps/libconvert_case-4b7e5832cc98b2c3.rmeta"},"prelude":{"crate_id":{"name":"convert_case","disambiguator":[2779947427894781000,0]},"crate_root":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src","external_crates":[{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8160662364186215271,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15508592535294299014,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17322933587189210298,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13179528220501159687,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14405461281750379523,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13415789777365414266,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14087240094303311622,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8480099122681864520,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7455356171819553965,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4032517352972638871,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[100442770310914164,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10836884096018266442,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[8583823352757433821,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16157489773683242703,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6201654522556613481,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15759299131545182078,0]}},{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[10203585439616027660,0]}}],"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":0,"byte_end":20875,"line_start":1,"line_end":644,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":159},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7586,"byte_end":7590,"line_start":197,"line_end":197,"column_start":15,"column_end":19},"alias_span":null,"name":"Case","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7611,"byte_end":7620,"line_start":198,"line_end":198,"column_start":20,"column_end":29},"alias_span":null,"name":"Converter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":228},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7639,"byte_end":7646,"line_start":199,"line_end":199,"column_start":18,"column_end":25},"alias_span":null,"name":"Pattern","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":254},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7670,"byte_end":7678,"line_start":200,"line_end":200,"column_start":23,"column_end":31},"alias_span":null,"name":"Boundary","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":0,"byte_end":20875,"line_start":1,"line_end":644,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":22},{"krate":0,"index":59},{"krate":0,"index":78},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":139},{"krate":0,"index":145},{"krate":0,"index":150}],"decl_id":null,"docs":" Converts to and from various cases.","sig":null,"attributes":[{"value":"/ Converts to and from various cases.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":0,"byte_end":39,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":40,"byte_end":43,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Command Line Utility `ccase`","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":44,"byte_end":78,"line_start":3,"line_end":3,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":79,"byte_end":82,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This library was developed for the purposes of a command line utility for converting","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":83,"byte_end":171,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/ the case of strings and filenames.  You can check out ","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":172,"byte_end":230,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/ [`ccase` on Github](https://github.com/rutrum/convert-case/tree/master/ccase).","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":231,"byte_end":313,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":314,"byte_end":317,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Rust Library","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":318,"byte_end":336,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":337,"byte_end":340,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Provides a [`Case`](enum.Case.html) enum which defines a variety of cases to convert into.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":341,"byte_end":435,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ Strings have implemented the [`Casing`](trait.Casing.html) trait, which adds methods for ","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":436,"byte_end":529,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ case conversion.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":530,"byte_end":550,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":551,"byte_end":554,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ You can convert strings into a case using the [`to_case`](Casing::to_case) method.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":555,"byte_end":641,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":642,"byte_end":649,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":650,"byte_end":687,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":688,"byte_end":691,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"Ronnie James Dio\", \"ronnie james dio\".to_case(Case::Title));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":692,"byte_end":768,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(\"ronnieJamesDio\", \"Ronnie_James_dio\".to_case(Case::Camel));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":769,"byte_end":843,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(\"Ronnie-James-Dio\", \"RONNIE_JAMES_DIO\".to_case(Case::Train));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":844,"byte_end":920,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":921,"byte_end":928,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":929,"byte_end":932,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ By default, `to_case` will split along a set of default word boundaries, that is","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":933,"byte_end":1017,"line_start":24,"line_end":24,"column_start":1,"column_end":85}},{"value":"/ * space characters ` `,","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1018,"byte_end":1045,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/ * underscores `_`,","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1046,"byte_end":1068,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ * hyphens `-`,","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1069,"byte_end":1087,"line_start":27,"line_end":27,"column_start":1,"column_end":19}},{"value":"/ * changes in capitalization from lowercase to uppercase `aA`,","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1088,"byte_end":1153,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ * adjacent digits and letters `a1`, `1a`, `A1`, `1A`,","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1154,"byte_end":1211,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/ * and acroynms `AAa` (as in `HTTPRequest`).","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1212,"byte_end":1259,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1260,"byte_end":1263,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ For more accuracy, the `from_case` method splits based on the word boundaries","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1264,"byte_end":1345,"line_start":32,"line_end":32,"column_start":1,"column_end":82}},{"value":"/ of a particular case.  For example, splitting from snake case will only use","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1346,"byte_end":1425,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ underscores as word boundaries.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1426,"byte_end":1461,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1462,"byte_end":1469,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1470,"byte_end":1507,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1508,"byte_end":1511,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1512,"byte_end":1527,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/     \"2020 04 16 My Cat Cali\",","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1528,"byte_end":1561,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/     \"2020-04-16_my_cat_cali\".to_case(Case::Title)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1562,"byte_end":1615,"line_start":40,"line_end":40,"column_start":1,"column_end":54}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1616,"byte_end":1622,"line_start":41,"line_end":41,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1623,"byte_end":1638,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/     \"2020-04-16 My Cat Cali\",","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1639,"byte_end":1672,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/     \"2020-04-16_my_cat_cali\".from_case(Case::Snake).to_case(Case::Title)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1673,"byte_end":1749,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1750,"byte_end":1756,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1757,"byte_end":1764,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1765,"byte_end":1768,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Case conversion can detect acronyms for camel-like strings.  It also ignores any leading, ","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1769,"byte_end":1863,"line_start":48,"line_end":48,"column_start":1,"column_end":95}},{"value":"/ trailing, or duplicate delimiters.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1864,"byte_end":1902,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1903,"byte_end":1910,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1911,"byte_end":1948,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1949,"byte_end":1952,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"io_stream\", \"IOStream\".to_case(Case::Snake));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":1953,"byte_end":2014,"line_start":53,"line_end":53,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(\"my_json_parser\", \"myJSONParser\".to_case(Case::Snake));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2015,"byte_end":2085,"line_start":54,"line_end":54,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2086,"byte_end":2089,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"weird_var_name\", \"__weird--var _name-\".to_case(Case::Snake));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2090,"byte_end":2167,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2168,"byte_end":2175,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2176,"byte_end":2179,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ It also works non-ascii characters.  However, no inferences on the language itself is made.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2180,"byte_end":2275,"line_start":59,"line_end":59,"column_start":1,"column_end":96}},{"value":"/ For instance, the digraph `ij` in Dutch will not be capitalized, because it is represented","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2276,"byte_end":2370,"line_start":60,"line_end":60,"column_start":1,"column_end":95}},{"value":"/ as two distinct Unicode characters.  However, `æ` would be capitalized.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2371,"byte_end":2447,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2448,"byte_end":2455,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2456,"byte_end":2493,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2494,"byte_end":2497,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"granat-äpfel\", \"GranatÄpfel\".to_case(Case::Kebab));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2498,"byte_end":2567,"line_start":65,"line_end":65,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2568,"byte_end":2571,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // The example from str::to_lowercase documentation","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2572,"byte_end":2627,"line_start":67,"line_end":67,"column_start":1,"column_end":56}},{"value":"/ let odysseus = \"ὈΔΥΣΣΕΎΣ\";","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2628,"byte_end":2667,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(\"ὀδυσσεύς\", odysseus.to_case(Case::Lower));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2668,"byte_end":2735,"line_start":69,"line_end":69,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2736,"byte_end":2743,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2744,"byte_end":2747,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ By default, characters followed by digits and vice-versa are","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2748,"byte_end":2812,"line_start":72,"line_end":72,"column_start":1,"column_end":65}},{"value":"/ considered word boundaries.  In addition, any special ASCII characters (besides `_` and `-`)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2813,"byte_end":2909,"line_start":73,"line_end":73,"column_start":1,"column_end":97}},{"value":"/ are ignored.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2910,"byte_end":2926,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2927,"byte_end":2934,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2935,"byte_end":2972,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2973,"byte_end":2976,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"e_5150\", \"E5150\".to_case(Case::Snake));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":2977,"byte_end":3032,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(\"10,000_days\", \"10,000Days\".to_case(Case::Snake));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3033,"byte_end":3098,"line_start":79,"line_end":79,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(\"HELLO, WORLD!\", \"Hello, world!\".to_case(Case::Upper));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3099,"byte_end":3169,"line_start":80,"line_end":80,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(\"One\\ntwo\\nthree\", \"ONE\\nTWO\\nTHREE\".to_case(Case::Title));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3170,"byte_end":3244,"line_start":81,"line_end":81,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3245,"byte_end":3252,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3253,"byte_end":3256,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ You can also test what case a string is in.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3257,"byte_end":3304,"line_start":84,"line_end":84,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3305,"byte_end":3312,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3313,"byte_end":3350,"line_start":86,"line_end":86,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3351,"byte_end":3354,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ assert!( \"css-class-name\".is_case(Case::Kebab));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3355,"byte_end":3407,"line_start":88,"line_end":88,"column_start":1,"column_end":53}},{"value":"/ assert!(!\"css-class-name\".is_case(Case::Snake));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3408,"byte_end":3460,"line_start":89,"line_end":89,"column_start":1,"column_end":53}},{"value":"/ assert!(!\"UPPER_CASE_VAR\".is_case(Case::Snake));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3461,"byte_end":3513,"line_start":90,"line_end":90,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3514,"byte_end":3521,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3522,"byte_end":3525,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ # Note on Accuracy","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3526,"byte_end":3548,"line_start":93,"line_end":93,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3549,"byte_end":3552,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The `Casing` methods `from_case` and `to_case` do not fail.  Conversion to a case will always","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3553,"byte_end":3650,"line_start":95,"line_end":95,"column_start":1,"column_end":98}},{"value":"/ succeed.  However, the results can still be unexpected.  Failure to detect any word boundaries","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3651,"byte_end":3749,"line_start":96,"line_end":96,"column_start":1,"column_end":99}},{"value":"/ for a particular case means the entire string will be considered a single word.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3750,"byte_end":3833,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3834,"byte_end":3841,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3842,"byte_end":3879,"line_start":99,"line_end":99,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3880,"byte_end":3883,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // Mistakenly parsing using Case::Snake","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3884,"byte_end":3927,"line_start":101,"line_end":101,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(\"My-kebab-var\", \"my-kebab-var\".from_case(Case::Snake).to_case(Case::Title));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":3928,"byte_end":4019,"line_start":102,"line_end":102,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4020,"byte_end":4023,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ // Converts using an unexpected method","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4024,"byte_end":4066,"line_start":104,"line_end":104,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(\"my_kebab_like_variable\", \"myKebab-like-variable\".to_case(Case::Snake));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4067,"byte_end":4154,"line_start":105,"line_end":105,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4155,"byte_end":4162,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4163,"byte_end":4166,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ # Boundary Specificity","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4167,"byte_end":4193,"line_start":108,"line_end":108,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4194,"byte_end":4197,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ It can be difficult to determine how to split a string into words.  That is why this case","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4198,"byte_end":4291,"line_start":110,"line_end":110,"column_start":1,"column_end":94}},{"value":"/ provides the [`from_case`](Casing::from_case) functionality, but sometimes that isn't enough","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4292,"byte_end":4388,"line_start":111,"line_end":111,"column_start":1,"column_end":97}},{"value":"/ to meet a specific use case.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4389,"byte_end":4421,"line_start":112,"line_end":112,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4422,"byte_end":4425,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Take an identifier has the word `2D`, such as `scale2D`.  No exclusive usage of `from_case` will","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4426,"byte_end":4526,"line_start":114,"line_end":114,"column_start":1,"column_end":101}},{"value":"/ be enough to solve the problem.  In this case we can further specify which boundaries to split","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4527,"byte_end":4625,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"/ the string on.  `convert_case` provides some patterns for achieving this specificity.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4626,"byte_end":4715,"line_start":116,"line_end":116,"column_start":1,"column_end":90}},{"value":"/ We can specify what boundaries we want to split on using the [`Boundary` enum](Boundary).","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4716,"byte_end":4809,"line_start":117,"line_end":117,"column_start":1,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4810,"byte_end":4817,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ use convert_case::{Boundary, Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4818,"byte_end":4865,"line_start":119,"line_end":119,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4866,"byte_end":4869,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ // Not quite what we want","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4870,"byte_end":4899,"line_start":121,"line_end":121,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4900,"byte_end":4915,"line_start":122,"line_end":122,"column_start":1,"column_end":16}},{"value":"/     \"scale_2_d\",","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4916,"byte_end":4936,"line_start":123,"line_end":123,"column_start":1,"column_end":21}},{"value":"/     \"scale2D\"","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4937,"byte_end":4954,"line_start":124,"line_end":124,"column_start":1,"column_end":18}},{"value":"/         .from_case(Case::Camel)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4955,"byte_end":4990,"line_start":125,"line_end":125,"column_start":1,"column_end":36}},{"value":"/         .to_case(Case::Snake)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":4991,"byte_end":5024,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5025,"byte_end":5031,"line_start":127,"line_end":127,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5032,"byte_end":5035,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ // Remove boundary from Case::Camel","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5036,"byte_end":5075,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5076,"byte_end":5091,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"/     \"scale_2d\",","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5092,"byte_end":5111,"line_start":131,"line_end":131,"column_start":1,"column_end":20}},{"value":"/     \"scale2D\"","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5112,"byte_end":5129,"line_start":132,"line_end":132,"column_start":1,"column_end":18}},{"value":"/         .from_case(Case::Camel)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5130,"byte_end":5165,"line_start":133,"line_end":133,"column_start":1,"column_end":36}},{"value":"/         .without_boundaries(&[Boundary::DigitUpper, Boundary::DigitLower])","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5166,"byte_end":5244,"line_start":134,"line_end":134,"column_start":1,"column_end":79}},{"value":"/         .to_case(Case::Snake)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5245,"byte_end":5278,"line_start":135,"line_end":135,"column_start":1,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5279,"byte_end":5285,"line_start":136,"line_end":136,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5286,"byte_end":5289,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ // Write boundaries explicitly","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5290,"byte_end":5324,"line_start":138,"line_end":138,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5325,"byte_end":5340,"line_start":139,"line_end":139,"column_start":1,"column_end":16}},{"value":"/     \"scale_2d\",","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5341,"byte_end":5360,"line_start":140,"line_end":140,"column_start":1,"column_end":20}},{"value":"/     \"scale2D\"","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5361,"byte_end":5378,"line_start":141,"line_end":141,"column_start":1,"column_end":18}},{"value":"/         .with_boundaries(&[Boundary::LowerDigit])","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5379,"byte_end":5432,"line_start":142,"line_end":142,"column_start":1,"column_end":54}},{"value":"/         .to_case(Case::Snake)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5433,"byte_end":5466,"line_start":143,"line_end":143,"column_start":1,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5467,"byte_end":5473,"line_start":144,"line_end":144,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5474,"byte_end":5481,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5482,"byte_end":5485,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ The `Casing` trait provides initial methods, but any subsequent methods that do not resolve","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5486,"byte_end":5581,"line_start":147,"line_end":147,"column_start":1,"column_end":96}},{"value":"/ the conversion return a [`StateConverter`] struct.  It contains similar methods as `Casing`.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5582,"byte_end":5678,"line_start":148,"line_end":148,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5679,"byte_end":5682,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # Custom Cases","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5683,"byte_end":5701,"line_start":150,"line_end":150,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5702,"byte_end":5705,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Because `Case` is an enum, you can't create your own variant for your use case.  However","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5706,"byte_end":5798,"line_start":152,"line_end":152,"column_start":1,"column_end":93}},{"value":"/ the parameters for case conversion have been encapsulated into the [`Converter`] struct","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5799,"byte_end":5890,"line_start":153,"line_end":153,"column_start":1,"column_end":92}},{"value":"/ which can be used for specific use cases.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5891,"byte_end":5936,"line_start":154,"line_end":154,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5937,"byte_end":5940,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Suppose you wanted to format a word like camel case, where the first word is lower case and the","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":5941,"byte_end":6040,"line_start":156,"line_end":156,"column_start":1,"column_end":100}},{"value":"/ rest are capitalized.  But you want to include a delimeter like underscore.  This case isn't","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6041,"byte_end":6137,"line_start":157,"line_end":157,"column_start":1,"column_end":97}},{"value":"/ available as a `Case` variant, but you can create it by constructing the parameters of the","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6138,"byte_end":6232,"line_start":158,"line_end":158,"column_start":1,"column_end":95}},{"value":"/ `Converter`.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6233,"byte_end":6249,"line_start":159,"line_end":159,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6250,"byte_end":6257,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ use convert_case::{Case, Casing, Converter, Pattern};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6258,"byte_end":6315,"line_start":161,"line_end":161,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6316,"byte_end":6319,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6320,"byte_end":6351,"line_start":163,"line_end":163,"column_start":1,"column_end":32}},{"value":"/     .set_pattern(Pattern::Camel)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6352,"byte_end":6388,"line_start":164,"line_end":164,"column_start":1,"column_end":37}},{"value":"/     .set_delim(\"_\");","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6389,"byte_end":6413,"line_start":165,"line_end":165,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6414,"byte_end":6417,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6418,"byte_end":6433,"line_start":167,"line_end":167,"column_start":1,"column_end":16}},{"value":"/     \"my_Special_Case\",","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6434,"byte_end":6460,"line_start":168,"line_end":168,"column_start":1,"column_end":27}},{"value":"/     conv.convert(\"My Special Case\")","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6461,"byte_end":6500,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"/ )","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6501,"byte_end":6506,"line_start":170,"line_end":170,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6507,"byte_end":6514,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/ Just as with the `Casing` trait, you can also manually set the boundaries strings are split ","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6515,"byte_end":6611,"line_start":172,"line_end":172,"column_start":1,"column_end":97}},{"value":"/ on.  You can use any of the [`Pattern`] variants available.  This even includes [`Pattern::Sentence`]","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6612,"byte_end":6717,"line_start":173,"line_end":173,"column_start":1,"column_end":106}},{"value":"/ which isn't used in any `Case` variant.  You can also set no pattern at all, which will","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6718,"byte_end":6809,"line_start":174,"line_end":174,"column_start":1,"column_end":92}},{"value":"/ maintain the casing of each letter in the input string.  You can also, of course, set any string as your","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6810,"byte_end":6918,"line_start":175,"line_end":175,"column_start":1,"column_end":109}},{"value":"/ delimeter.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6919,"byte_end":6933,"line_start":176,"line_end":176,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6934,"byte_end":6937,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ For more details on how strings are converted, see the docs for [`Converter`].","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":6938,"byte_end":7020,"line_start":178,"line_end":178,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7021,"byte_end":7024,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # Random Feature","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7025,"byte_end":7045,"line_start":180,"line_end":180,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7046,"byte_end":7049,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ To ensure this library had zero dependencies, randomness was moved to the _random_ feature,","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7050,"byte_end":7145,"line_start":182,"line_end":182,"column_start":1,"column_end":96}},{"value":"/ which requires the `rand` crate. You can enable this feature by including the","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7146,"byte_end":7227,"line_start":183,"line_end":183,"column_start":1,"column_end":82}},{"value":"/ following in your `Cargo.toml`.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7228,"byte_end":7263,"line_start":184,"line_end":184,"column_start":1,"column_end":36}},{"value":"/ ```{toml}","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7264,"byte_end":7277,"line_start":185,"line_end":185,"column_start":1,"column_end":14}},{"value":"/ [dependencies]","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7278,"byte_end":7296,"line_start":186,"line_end":186,"column_start":1,"column_end":19}},{"value":"/ convert_case = { version = \"^0.3.0\", features = [\"random\"] }","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7297,"byte_end":7361,"line_start":187,"line_end":187,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7362,"byte_end":7369,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ This will add two additional cases: Random and PseudoRandom.  You can read about their","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7370,"byte_end":7460,"line_start":189,"line_end":189,"column_start":1,"column_end":91}},{"value":"/ construction in the [Case enum](enum.Case.html).","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7461,"byte_end":7513,"line_start":190,"line_end":190,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":160},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22553,"byte_end":22558,"line_start":39,"line_end":39,"column_start":5,"column_end":10},"name":"Upper","qualname":"::case::Case::Upper","value":"Case::Upper","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Uppercase strings are delimited by spaces and all characters are uppercase.\n * Boundaries: [Space](`Boundary::Space`)\n * Pattern: [Uppercase](`Pattern::Uppercase`)\n * Delimeter: Space","sig":null,"attributes":[{"value":"/ Uppercase strings are delimited by spaces and all characters are uppercase.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22186,"byte_end":22265,"line_start":30,"line_end":30,"column_start":5,"column_end":84}},{"value":"/ * Boundaries: [Space](`Boundary::Space`)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22270,"byte_end":22314,"line_start":31,"line_end":31,"column_start":5,"column_end":49}},{"value":"/ * Pattern: [Uppercase](`Pattern::Uppercase`)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22319,"byte_end":22367,"line_start":32,"line_end":32,"column_start":5,"column_end":53}},{"value":"/ * Delimeter: Space","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22372,"byte_end":22394,"line_start":33,"line_end":33,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22399,"byte_end":22402,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22407,"byte_end":22414,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22419,"byte_end":22456,"line_start":36,"line_end":36,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(\"MY VARIABLE NAME\", \"My variable NAME\".to_case(Case::Upper))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22461,"byte_end":22536,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22541,"byte_end":22548,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":162},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22932,"byte_end":22937,"line_start":50,"line_end":50,"column_start":5,"column_end":10},"name":"Lower","qualname":"::case::Case::Lower","value":"Case::Lower","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Lowercase strings are delimited by spaces and all characters are lowercase.\n * Boundaries: [Space](`Boundary::Space`)\n * Pattern: [Lowercase](`Pattern::Lowercase`)\n * Delimeter: Space","sig":null,"attributes":[{"value":"/ Lowercase strings are delimited by spaces and all characters are lowercase.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22565,"byte_end":22644,"line_start":41,"line_end":41,"column_start":5,"column_end":84}},{"value":"/ * Boundaries: [Space](`Boundary::Space`)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22649,"byte_end":22693,"line_start":42,"line_end":42,"column_start":5,"column_end":49}},{"value":"/ * Pattern: [Lowercase](`Pattern::Lowercase`)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22698,"byte_end":22746,"line_start":43,"line_end":43,"column_start":5,"column_end":53}},{"value":"/ * Delimeter: Space","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22751,"byte_end":22773,"line_start":44,"line_end":44,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22778,"byte_end":22781,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22786,"byte_end":22793,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22798,"byte_end":22835,"line_start":47,"line_end":47,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(\"my variable name\", \"My variable NAME\".to_case(Case::Lower))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22840,"byte_end":22915,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22920,"byte_end":22927,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":164},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23448,"byte_end":23453,"line_start":63,"line_end":63,"column_start":5,"column_end":10},"name":"Title","qualname":"::case::Case::Title","value":"Case::Title","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Title case strings are delimited by spaces. Only the leading character of\n each word is uppercase.  No inferences are made about language, so words\n like \"as\", \"to\", and \"for\" will still be capitalized.\n * Boundaries: [Space](`Boundary::Space`)\n * Pattern: [Capital](`Pattern::Capital`)\n * Delimeter: Space","sig":null,"attributes":[{"value":"/ Title case strings are delimited by spaces. Only the leading character of","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22944,"byte_end":23021,"line_start":52,"line_end":52,"column_start":5,"column_end":82}},{"value":"/ each word is uppercase.  No inferences are made about language, so words","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23026,"byte_end":23102,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ like \"as\", \"to\", and \"for\" will still be capitalized.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23107,"byte_end":23164,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/ * Boundaries: [Space](`Boundary::Space`)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23169,"byte_end":23213,"line_start":55,"line_end":55,"column_start":5,"column_end":49}},{"value":"/ * Pattern: [Capital](`Pattern::Capital`)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23218,"byte_end":23262,"line_start":56,"line_end":56,"column_start":5,"column_end":49}},{"value":"/ * Delimeter: Space","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23267,"byte_end":23289,"line_start":57,"line_end":57,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23294,"byte_end":23297,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23302,"byte_end":23309,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23314,"byte_end":23351,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(\"My Variable Name\", \"My variable NAME\".to_case(Case::Title))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23356,"byte_end":23431,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23436,"byte_end":23443,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":166},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23896,"byte_end":23902,"line_start":75,"line_end":75,"column_start":5,"column_end":11},"name":"Toggle","qualname":"::case::Case::Toggle","value":"Case::Toggle","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Toggle case strings are delimited by spaces.  All characters are uppercase except\n for the leading character of each word, which is lowercase.\n * Boundaries: [Space](`Boundary::Space`)\n * Pattern: [Toggle](`Pattern::Toggle`)\n * Delimeter: Space","sig":null,"attributes":[{"value":"/ Toggle case strings are delimited by spaces.  All characters are uppercase except","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23460,"byte_end":23545,"line_start":65,"line_end":65,"column_start":5,"column_end":90}},{"value":"/ for the leading character of each word, which is lowercase.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23550,"byte_end":23613,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/ * Boundaries: [Space](`Boundary::Space`)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23618,"byte_end":23662,"line_start":67,"line_end":67,"column_start":5,"column_end":49}},{"value":"/ * Pattern: [Toggle](`Pattern::Toggle`)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23667,"byte_end":23709,"line_start":68,"line_end":68,"column_start":5,"column_end":47}},{"value":"/ * Delimeter: Space","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23714,"byte_end":23736,"line_start":69,"line_end":69,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23741,"byte_end":23744,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23749,"byte_end":23756,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23761,"byte_end":23798,"line_start":72,"line_end":72,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(\"mY vARIABLE nAME\", \"My variable NAME\".to_case(Case::Toggle))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23803,"byte_end":23879,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23884,"byte_end":23891,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":168},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24508,"byte_end":24513,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"Camel","qualname":"::case::Case::Camel","value":"Case::Camel","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Camel case strings are lowercase, but for every word _except the first_ the\n first letter is capitalized.\n * Boundaries: [LowerUpper](Boundary::LowerUpper), [DigitUpper](Boundary::DigitUpper),\n [UpperDigit](Boundary::UpperDigit), [DigitLower](Boundary::DigitLower),\n [LowerDigit](Boundary::LowerDigit), [Acronym](Boundary::Acronym)\n * Pattern: [Camel](`Pattern::Camel`)\n * Delimeter: No delimeter","sig":null,"attributes":[{"value":"/ Camel case strings are lowercase, but for every word _except the first_ the","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23909,"byte_end":23988,"line_start":77,"line_end":77,"column_start":5,"column_end":84}},{"value":"/ first letter is capitalized.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":23993,"byte_end":24025,"line_start":78,"line_end":78,"column_start":5,"column_end":37}},{"value":"/ * Boundaries: [LowerUpper](Boundary::LowerUpper), [DigitUpper](Boundary::DigitUpper),","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24030,"byte_end":24119,"line_start":79,"line_end":79,"column_start":5,"column_end":94}},{"value":"/ [UpperDigit](Boundary::UpperDigit), [DigitLower](Boundary::DigitLower),","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24124,"byte_end":24199,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ [LowerDigit](Boundary::LowerDigit), [Acronym](Boundary::Acronym)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24204,"byte_end":24272,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ * Pattern: [Camel](`Pattern::Camel`)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24277,"byte_end":24317,"line_start":82,"line_end":82,"column_start":5,"column_end":45}},{"value":"/ * Delimeter: No delimeter","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24322,"byte_end":24351,"line_start":83,"line_end":83,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24356,"byte_end":24359,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24364,"byte_end":24371,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24376,"byte_end":24413,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(\"myVariableName\", \"My variable NAME\".to_case(Case::Camel))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24418,"byte_end":24491,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24496,"byte_end":24503,"line_start":88,"line_end":88,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":170},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25106,"byte_end":25112,"line_start":103,"line_end":103,"column_start":5,"column_end":11},"name":"Pascal","qualname":"::case::Case::Pascal","value":"Case::Pascal","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Pascal case strings are lowercase, but for every word the\n first letter is capitalized.\n * Boundaries: [LowerUpper](Boundary::LowerUpper), [DigitUpper](Boundary::DigitUpper),\n [UpperDigit](Boundary::UpperDigit), [DigitLower](Boundary::DigitLower),\n [LowerDigit](Boundary::LowerDigit), [Acronym](Boundary::Acronym)\n * Pattern: [Capital](`Pattern::Capital`)\n * Delimeter: No delimeter","sig":null,"attributes":[{"value":"/ Pascal case strings are lowercase, but for every word the","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24520,"byte_end":24581,"line_start":91,"line_end":91,"column_start":5,"column_end":66}},{"value":"/ first letter is capitalized.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24586,"byte_end":24618,"line_start":92,"line_end":92,"column_start":5,"column_end":37}},{"value":"/ * Boundaries: [LowerUpper](Boundary::LowerUpper), [DigitUpper](Boundary::DigitUpper),","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24623,"byte_end":24712,"line_start":93,"line_end":93,"column_start":5,"column_end":94}},{"value":"/ [UpperDigit](Boundary::UpperDigit), [DigitLower](Boundary::DigitLower),","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24717,"byte_end":24792,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ [LowerDigit](Boundary::LowerDigit), [Acronym](Boundary::Acronym)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24797,"byte_end":24865,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ * Pattern: [Capital](`Pattern::Capital`)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24870,"byte_end":24914,"line_start":96,"line_end":96,"column_start":5,"column_end":49}},{"value":"/ * Delimeter: No delimeter","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24919,"byte_end":24948,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24953,"byte_end":24956,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24961,"byte_end":24968,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":24973,"byte_end":25010,"line_start":100,"line_end":100,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(\"MyVariableName\", \"My variable NAME\".to_case(Case::Pascal))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25015,"byte_end":25089,"line_start":101,"line_end":101,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25094,"byte_end":25101,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":172},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25200,"byte_end":25210,"line_start":106,"line_end":106,"column_start":5,"column_end":15},"name":"UpperCamel","qualname":"::case::Case::UpperCamel","value":"Case::UpperCamel","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Upper camel case is an alternative name for [Pascal case](Case::Pascal).\n","sig":null,"attributes":[{"value":"/ Upper camel case is an alternative name for [Pascal case](Case::Pascal).","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25119,"byte_end":25195,"line_start":105,"line_end":105,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":174},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25598,"byte_end":25603,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Snake","qualname":"::case::Case::Snake","value":"Case::Snake","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Snake case strings are delimited by underscores `_` and are all lowercase.\n * Boundaries: [Underscore](Boundary::Underscore)\n * Pattern: [Lowercase](Pattern::Lowercase)\n * Delimeter: Underscore `_`","sig":null,"attributes":[{"value":"/ Snake case strings are delimited by underscores `_` and are all lowercase.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25217,"byte_end":25295,"line_start":108,"line_end":108,"column_start":5,"column_end":83}},{"value":"/ * Boundaries: [Underscore](Boundary::Underscore)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25300,"byte_end":25352,"line_start":109,"line_end":109,"column_start":5,"column_end":57}},{"value":"/ * Pattern: [Lowercase](Pattern::Lowercase)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25357,"byte_end":25403,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/ * Delimeter: Underscore `_`","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25408,"byte_end":25439,"line_start":111,"line_end":111,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25444,"byte_end":25447,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25452,"byte_end":25459,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25464,"byte_end":25501,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(\"my_variable_name\", \"My variable NAME\".to_case(Case::Snake))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25506,"byte_end":25581,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25586,"byte_end":25593,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":176},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26002,"byte_end":26012,"line_start":128,"line_end":128,"column_start":5,"column_end":15},"name":"UpperSnake","qualname":"::case::Case::UpperSnake","value":"Case::UpperSnake","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Upper snake case strings are delimited by underscores `_` and are all uppercase.\n * Boundaries: [Underscore](Boundary::Underscore)\n * Pattern: [Uppercase](Pattern::Uppercase)\n * Delimeter: Underscore `_`","sig":null,"attributes":[{"value":"/ Upper snake case strings are delimited by underscores `_` and are all uppercase.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25610,"byte_end":25694,"line_start":119,"line_end":119,"column_start":5,"column_end":89}},{"value":"/ * Boundaries: [Underscore](Boundary::Underscore)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25699,"byte_end":25751,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/ * Pattern: [Uppercase](Pattern::Uppercase)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25756,"byte_end":25802,"line_start":121,"line_end":121,"column_start":5,"column_end":51}},{"value":"/ * Delimeter: Underscore `_`","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25807,"byte_end":25838,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25843,"byte_end":25846,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25851,"byte_end":25858,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25863,"byte_end":25900,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(\"MY_VARIABLE_NAME\", \"My variable NAME\".to_case(Case::UpperSnake))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25905,"byte_end":25985,"line_start":126,"line_end":126,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":25990,"byte_end":25997,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":178},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26113,"byte_end":26127,"line_start":131,"line_end":131,"column_start":5,"column_end":19},"name":"ScreamingSnake","qualname":"::case::Case::ScreamingSnake","value":"Case::ScreamingSnake","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Screaming snake case is an alternative name for [upper snake case](Case::UpperSnake).\n","sig":null,"attributes":[{"value":"/ Screaming snake case is an alternative name for [upper snake case](Case::UpperSnake).","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26019,"byte_end":26108,"line_start":130,"line_end":130,"column_start":5,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":180},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26499,"byte_end":26504,"line_start":142,"line_end":142,"column_start":5,"column_end":10},"name":"Kebab","qualname":"::case::Case::Kebab","value":"Case::Kebab","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Kebab case strings are delimited by hyphens `-` and are all lowercase.\n * Boundaries: [Hyphen](Boundary::Hyphen)\n * Pattern: [Lowercase](Pattern::Lowercase)\n * Delimeter: Hyphen `-`","sig":null,"attributes":[{"value":"/ Kebab case strings are delimited by hyphens `-` and are all lowercase.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26134,"byte_end":26208,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ * Boundaries: [Hyphen](Boundary::Hyphen)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26213,"byte_end":26257,"line_start":134,"line_end":134,"column_start":5,"column_end":49}},{"value":"/ * Pattern: [Lowercase](Pattern::Lowercase)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26262,"byte_end":26308,"line_start":135,"line_end":135,"column_start":5,"column_end":51}},{"value":"/ * Delimeter: Hyphen `-`","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26313,"byte_end":26340,"line_start":136,"line_end":136,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26345,"byte_end":26348,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26353,"byte_end":26360,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26365,"byte_end":26402,"line_start":139,"line_end":139,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(\"my-variable-name\", \"My variable NAME\".to_case(Case::Kebab))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26407,"byte_end":26482,"line_start":140,"line_end":140,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26487,"byte_end":26494,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":182},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26876,"byte_end":26881,"line_start":153,"line_end":153,"column_start":5,"column_end":10},"name":"Cobol","qualname":"::case::Case::Cobol","value":"Case::Cobol","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Cobol case strings are delimited by hyphens `-` and are all uppercase.\n * Boundaries: [Hyphen](Boundary::Hyphen)\n * Pattern: [Uppercase](Pattern::Uppercase)\n * Delimeter: Hyphen `-`","sig":null,"attributes":[{"value":"/ Cobol case strings are delimited by hyphens `-` and are all uppercase.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26511,"byte_end":26585,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ * Boundaries: [Hyphen](Boundary::Hyphen)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26590,"byte_end":26634,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/ * Pattern: [Uppercase](Pattern::Uppercase)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26639,"byte_end":26685,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ * Delimeter: Hyphen `-`","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26690,"byte_end":26717,"line_start":147,"line_end":147,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26722,"byte_end":26725,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26730,"byte_end":26737,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26742,"byte_end":26779,"line_start":150,"line_end":150,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(\"MY-VARIABLE-NAME\", \"My variable NAME\".to_case(Case::Cobol))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26784,"byte_end":26859,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26864,"byte_end":26871,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":184},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26967,"byte_end":26977,"line_start":156,"line_end":156,"column_start":5,"column_end":15},"name":"UpperKebab","qualname":"::case::Case::UpperKebab","value":"Case::UpperKebab","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Upper kebab case is an alternative name for [Cobol case](Case::Cobol).\n","sig":null,"attributes":[{"value":"/ Upper kebab case is an alternative name for [Cobol case](Case::Cobol).","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26888,"byte_end":26962,"line_start":155,"line_end":155,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":186},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27408,"byte_end":27413,"line_start":168,"line_end":168,"column_start":5,"column_end":10},"name":"Train","qualname":"::case::Case::Train","value":"Case::Train","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Train case strings are delimited by hyphens `-`.  All characters are lowercase\n except for the leading character of each word.\n * Boundaries: [Hyphen](Boundary::Hyphen)\n * Pattern: [Capital](Pattern::Capital)\n * Delimeter: Hyphen `-`","sig":null,"attributes":[{"value":"/ Train case strings are delimited by hyphens `-`.  All characters are lowercase","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":26984,"byte_end":27066,"line_start":158,"line_end":158,"column_start":5,"column_end":87}},{"value":"/ except for the leading character of each word.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27071,"byte_end":27121,"line_start":159,"line_end":159,"column_start":5,"column_end":55}},{"value":"/ * Boundaries: [Hyphen](Boundary::Hyphen)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27126,"byte_end":27170,"line_start":160,"line_end":160,"column_start":5,"column_end":49}},{"value":"/ * Pattern: [Capital](Pattern::Capital)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27175,"byte_end":27217,"line_start":161,"line_end":161,"column_start":5,"column_end":47}},{"value":"/ * Delimeter: Hyphen `-`","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27222,"byte_end":27249,"line_start":162,"line_end":162,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27254,"byte_end":27257,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27262,"byte_end":27269,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27274,"byte_end":27311,"line_start":165,"line_end":165,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(\"My-Variable-Name\", \"My variable NAME\".to_case(Case::Train))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27316,"byte_end":27391,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27396,"byte_end":27403,"line_start":167,"line_end":167,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":188},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27792,"byte_end":27796,"line_start":179,"line_end":179,"column_start":5,"column_end":9},"name":"Flat","qualname":"::case::Case::Flat","value":"Case::Flat","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Flat case strings are all lowercase, with no delimiter. Note that word boundaries are lost.\n * Boundaries: No boundaries\n * Pattern: [Lowercase](Pattern::Lowercase)\n * Delimeter: No delimeter","sig":null,"attributes":[{"value":"/ Flat case strings are all lowercase, with no delimiter. Note that word boundaries are lost.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27420,"byte_end":27515,"line_start":170,"line_end":170,"column_start":5,"column_end":100}},{"value":"/ * Boundaries: No boundaries","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27520,"byte_end":27551,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/ * Pattern: [Lowercase](Pattern::Lowercase)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27556,"byte_end":27602,"line_start":172,"line_end":172,"column_start":5,"column_end":51}},{"value":"/ * Delimeter: No delimeter","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27607,"byte_end":27636,"line_start":173,"line_end":173,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27641,"byte_end":27644,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27649,"byte_end":27656,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27661,"byte_end":27698,"line_start":176,"line_end":176,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(\"myvariablename\", \"My variable NAME\".to_case(Case::Flat))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27703,"byte_end":27775,"line_start":177,"line_end":177,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27780,"byte_end":27787,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":190},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28186,"byte_end":28195,"line_start":190,"line_end":190,"column_start":5,"column_end":14},"name":"UpperFlat","qualname":"::case::Case::UpperFlat","value":"Case::UpperFlat","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Upper flat case strings are all uppercase, with no delimiter. Note that word boundaries are lost.\n * Boundaries: No boundaries\n * Pattern: [Uppercase](Pattern::Uppercase)\n * Delimeter: No delimeter","sig":null,"attributes":[{"value":"/ Upper flat case strings are all uppercase, with no delimiter. Note that word boundaries are lost.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27803,"byte_end":27904,"line_start":181,"line_end":181,"column_start":5,"column_end":106}},{"value":"/ * Boundaries: No boundaries","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27909,"byte_end":27940,"line_start":182,"line_end":182,"column_start":5,"column_end":36}},{"value":"/ * Pattern: [Uppercase](Pattern::Uppercase)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27945,"byte_end":27991,"line_start":183,"line_end":183,"column_start":5,"column_end":51}},{"value":"/ * Delimeter: No delimeter","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":27996,"byte_end":28025,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28030,"byte_end":28033,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28038,"byte_end":28045,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28050,"byte_end":28087,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(\"MYVARIABLENAME\", \"My variable NAME\".to_case(Case::UpperFlat))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28092,"byte_end":28169,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28174,"byte_end":28181,"line_start":189,"line_end":189,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":192},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28613,"byte_end":28624,"line_start":202,"line_end":202,"column_start":5,"column_end":16},"name":"Alternating","qualname":"::case::Case::Alternating","value":"Case::Alternating","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Alternating case strings are delimited by spaces.  Characters alternate between uppercase\n and lowercase.\n * Boundaries: [Space](Boundary::Space)\n * Pattern: [Alternating](Pattern::Alternating)\n * Delimeter: Space","sig":null,"attributes":[{"value":"/ Alternating case strings are delimited by spaces.  Characters alternate between uppercase","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28202,"byte_end":28295,"line_start":192,"line_end":192,"column_start":5,"column_end":98}},{"value":"/ and lowercase.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28300,"byte_end":28318,"line_start":193,"line_end":193,"column_start":5,"column_end":23}},{"value":"/ * Boundaries: [Space](Boundary::Space)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28323,"byte_end":28365,"line_start":194,"line_end":194,"column_start":5,"column_end":47}},{"value":"/ * Pattern: [Alternating](Pattern::Alternating)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28370,"byte_end":28420,"line_start":195,"line_end":195,"column_start":5,"column_end":55}},{"value":"/ * Delimeter: Space","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28425,"byte_end":28447,"line_start":196,"line_end":196,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28452,"byte_end":28455,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28460,"byte_end":28467,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28472,"byte_end":28509,"line_start":199,"line_end":199,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(\"mY vArIaBlE nAmE\", \"My variable NAME\".to_case(Case::Alternating));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28514,"byte_end":28596,"line_start":200,"line_end":200,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":28601,"byte_end":28608,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":159},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22175,"byte_end":22179,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"name":"Case","qualname":"::case::Case","value":"pub enum Case {\n    Upper,\n    Lower,\n    Title,\n    Toggle,\n    Camel,\n    Pascal,\n    UpperCamel,\n    Snake,\n    UpperSnake,\n    ScreamingSnake,\n    Kebab,\n    Cobol,\n    UpperKebab,\n    Train,\n    Flat,\n    UpperFlat,\n    Alternating,\n}","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192}],"decl_id":null,"docs":" Defines the type of casing a string can be.","sig":null,"attributes":[{"value":"/ Defines the type of casing a string can be.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":20970,"byte_end":21017,"line_start":7,"line_end":7,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21018,"byte_end":21021,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21022,"byte_end":21029,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21030,"byte_end":21067,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21068,"byte_end":21071,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ let super_mario_title: String = \"super_mario_64\".to_case(Case::Title);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21072,"byte_end":21146,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(\"Super Mario 64\", super_mario_title);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21147,"byte_end":21199,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21200,"byte_end":21207,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21208,"byte_end":21211,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ A case is the pair of a [pattern](enum.Pattern.html) and a delimeter (a string).  Given","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21212,"byte_end":21303,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ a list of words, a pattern describes how to mutate the words and a delimeter is how the mutated","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21304,"byte_end":21403,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"/ words are joined together.  These inherantly are the properties of what makes a \"multiword","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21404,"byte_end":21498,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/ identifier case\", or simply \"case\".","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21499,"byte_end":21538,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21539,"byte_end":21542,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This crate provides the ability to convert \"from\" a case.  This introduces a different feature","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21543,"byte_end":21641,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/ of cases which are the [word boundaries](Boundary) that segment the identifier into words.  For example, a","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21642,"byte_end":21752,"line_start":22,"line_end":22,"column_start":1,"column_end":111}},{"value":"/ snake case identifier `my_var_name` can be split on underscores `_` to segment into words.  A","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21753,"byte_end":21850,"line_start":23,"line_end":23,"column_start":1,"column_end":98}},{"value":"/ camel case identifier `myVarName` is split where a lowercase letter is followed by an","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21851,"byte_end":21940,"line_start":24,"line_end":24,"column_start":1,"column_end":90}},{"value":"/ uppercase letter.  Each case is also associated with a list of boundaries that are used when","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":21941,"byte_end":22037,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ converting \"from\" a particular case.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":22038,"byte_end":22078,"line_start":26,"line_end":26,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":30397,"byte_end":30402,"line_start":246,"line_end":246,"column_start":18,"column_end":23},"name":"delim","qualname":"<Case>::delim","value":"pub const fn delim(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the delimiter used in the corresponding case.  The following\n table outlines which cases use which delimeter.","sig":null,"attributes":[{"value":"/ Returns the delimiter used in the corresponding case.  The following","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":29904,"byte_end":29976,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/ table outlines which cases use which delimeter.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":29981,"byte_end":30032,"line_start":238,"line_end":238,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":30037,"byte_end":30040,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ | Cases | Delimeter |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":30045,"byte_end":30070,"line_start":240,"line_end":240,"column_start":5,"column_end":30}},{"value":"/ | --- | --- |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":30075,"byte_end":30092,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/ | Upper, Lower, Title, Toggle, Alternating, Random, PseudoRandom | Space |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":30097,"byte_end":30175,"line_start":242,"line_end":242,"column_start":5,"column_end":83}},{"value":"/ | Snake, UpperSnake, ScreamingSnake | Underscore `_` |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":30180,"byte_end":30238,"line_start":243,"line_end":243,"column_start":5,"column_end":63}},{"value":"/ | Kebab, Cobol, UpperKebab, Train | Hyphen `-` |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":30243,"byte_end":30295,"line_start":244,"line_end":244,"column_start":5,"column_end":57}},{"value":"/ | UpperFlat, Flat, Camel, UpperCamel, Pascal | Empty string, no delimeter |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":30300,"byte_end":30379,"line_start":245,"line_end":245,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":31341,"byte_end":31348,"line_start":272,"line_end":272,"column_start":18,"column_end":25},"name":"pattern","qualname":"<Case>::pattern","value":"pub const fn pattern(&Self) -> Pattern","parent":null,"children":[],"decl_id":null,"docs":" Returns the pattern used in the corresponding case.  The following\n table outlines which cases use which pattern.","sig":null,"attributes":[{"value":"/ Returns the pattern used in the corresponding case.  The following","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":30816,"byte_end":30886,"line_start":260,"line_end":260,"column_start":5,"column_end":75}},{"value":"/ table outlines which cases use which pattern.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":30891,"byte_end":30940,"line_start":261,"line_end":261,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":30945,"byte_end":30948,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ | Cases | Pattern |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":30953,"byte_end":30976,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/ | --- | --- |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":30981,"byte_end":30998,"line_start":264,"line_end":264,"column_start":5,"column_end":22}},{"value":"/ | Upper, UpperSnake, ScreamingSnake, UpperFlat, Cobol, UpperKebab | Uppercase |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":31003,"byte_end":31086,"line_start":265,"line_end":265,"column_start":5,"column_end":88}},{"value":"/ | Lower, Snake, Kebab, Flat | Lowercase |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":31091,"byte_end":31136,"line_start":266,"line_end":266,"column_start":5,"column_end":50}},{"value":"/ | Title, Pascal, UpperCamel, Train | Capital |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":31141,"byte_end":31191,"line_start":267,"line_end":267,"column_start":5,"column_end":55}},{"value":"/ | Camel | Camel |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":31196,"byte_end":31217,"line_start":268,"line_end":268,"column_start":5,"column_end":26}},{"value":"/ | Alternating | Alternating |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":31222,"byte_end":31255,"line_start":269,"line_end":269,"column_start":5,"column_end":38}},{"value":"/ | Random | Random |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":31260,"byte_end":31283,"line_start":270,"line_end":270,"column_start":5,"column_end":28}},{"value":"/ | PseudoRandom | PseudoRandom |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":31288,"byte_end":31323,"line_start":271,"line_end":271,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":32641,"byte_end":32651,"line_start":302,"line_end":302,"column_start":12,"column_end":22},"name":"boundaries","qualname":"<Case>::boundaries","value":"pub fn boundaries(&Self) -> Vec<Boundary>","parent":null,"children":[],"decl_id":null,"docs":" Returns the boundaries used in the corresponding case.  That is, where can word boundaries\n be distinguished in a string of the given case.  The table outlines which cases use which\n set of boundaries.","sig":null,"attributes":[{"value":"/ Returns the boundaries used in the corresponding case.  That is, where can word boundaries","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":31994,"byte_end":32088,"line_start":291,"line_end":291,"column_start":5,"column_end":99}},{"value":"/ be distinguished in a string of the given case.  The table outlines which cases use which","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":32093,"byte_end":32186,"line_start":292,"line_end":292,"column_start":5,"column_end":98}},{"value":"/ set of boundaries.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":32191,"byte_end":32213,"line_start":293,"line_end":293,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":32218,"byte_end":32221,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ | Cases | Boundaries |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":32226,"byte_end":32252,"line_start":295,"line_end":295,"column_start":5,"column_end":31}},{"value":"/ | --- | --- |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":32257,"byte_end":32274,"line_start":296,"line_end":296,"column_start":5,"column_end":22}},{"value":"/ | Upper, Lower, Title, Toggle, Alternating, Random, PseudoRandom | Space |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":32279,"byte_end":32357,"line_start":297,"line_end":297,"column_start":5,"column_end":83}},{"value":"/ | Snake, UpperSnake, ScreamingSnake | Underscore `_` |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":32362,"byte_end":32420,"line_start":298,"line_end":298,"column_start":5,"column_end":63}},{"value":"/ | Kebab, Cobol, UpperKebab, Train | Hyphen `-` |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":32425,"byte_end":32477,"line_start":299,"line_end":299,"column_start":5,"column_end":57}},{"value":"/ | Camel, UpperCamel, Pascal | LowerUpper, LowerDigit, UpperDigit, DigitLower, DigitUpper, Acronym |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":32482,"byte_end":32585,"line_start":300,"line_end":300,"column_start":5,"column_end":108}},{"value":"/ | UpperFlat, Flat | No boundaries |","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":32590,"byte_end":32629,"line_start":301,"line_end":301,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":33470,"byte_end":33479,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"all_cases","qualname":"<Case>::all_cases","value":"pub fn all_cases() -> Vec<Case>","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector with all case enum variants in no particular order.\n","sig":null,"attributes":[{"value":"/ Returns a vector with all case enum variants in no particular order.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":33386,"byte_end":33458,"line_start":322,"line_end":322,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":34452,"byte_end":34471,"line_start":360,"line_end":360,"column_start":12,"column_end":31},"name":"deterministic_cases","qualname":"<Case>::deterministic_cases","value":"pub fn deterministic_cases() -> Vec<Case>","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector with all the cases that do not depend on randomness.  This is all\n the cases not in the \"random\" feature.\n","sig":null,"attributes":[{"value":"/ Returns a vector with all the cases that do not depend on randomness.  This is all","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":34307,"byte_end":34393,"line_start":358,"line_end":358,"column_start":5,"column_end":91}},{"value":"/ the cases not in the \"random\" feature.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":34398,"byte_end":34440,"line_start":359,"line_end":359,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":35},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37209,"byte_end":37218,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"Converter","qualname":"::converter::Converter","value":"Converter { boundaries, pattern, delim }","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" The parameters for performing a case conversion.","sig":null,"attributes":[{"value":"/ The parameters for performing a case conversion.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35236,"byte_end":35288,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35289,"byte_end":35292,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ A `Converter` stores three fields needed for case conversion.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35293,"byte_end":35358,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ 1) `boundaries`: how a string is segmented into _words_.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35359,"byte_end":35419,"line_start":9,"line_end":9,"column_start":1,"column_end":61}},{"value":"/ 2) `pattern`: how words are mutated, or how each character's case will change.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35420,"byte_end":35502,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/ 3) `delim` or delimeter: how the mutated words are joined into the final string.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35503,"byte_end":35587,"line_start":11,"line_end":11,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35588,"byte_end":35591,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Then calling [`convert`](Converter::convert) on a `Converter` will apply a case conversion","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35592,"byte_end":35686,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ defined by those fields.  The `Converter` struct is what is used underneath those functions","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35687,"byte_end":35782,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ available in the `Casing` struct.  ","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35783,"byte_end":35822,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35823,"byte_end":35826,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ You can use `Converter` when you need more specificity on conversion","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35827,"byte_end":35899,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ than those provided in `Casing`, or if it is simply more convenient or explicit.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35900,"byte_end":35984,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35985,"byte_end":35988,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35989,"byte_end":35996,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use convert_case::{Boundary, Case, Casing, Converter, Pattern};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":35997,"byte_end":36064,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36065,"byte_end":36068,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let s = \"DialogueBox-border-shadow\";","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36069,"byte_end":36109,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36110,"byte_end":36113,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // Convert using Casing trait","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36114,"byte_end":36147,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36148,"byte_end":36163,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/     \"dialoguebox_border_shadow\",","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36164,"byte_end":36200,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/     s.from_case(Case::Kebab).to_case(Case::Snake)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36201,"byte_end":36254,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36255,"byte_end":36261,"line_start":29,"line_end":29,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36262,"byte_end":36265,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // Convert using similar functions on Converter","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36266,"byte_end":36317,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36318,"byte_end":36349,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/     .from_case(Case::Kebab)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36350,"byte_end":36381,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/     .to_case(Case::Snake);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36382,"byte_end":36412,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(\"dialoguebox_border_shadow\", conv.convert(s));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36413,"byte_end":36474,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36475,"byte_end":36478,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Convert by setting each field explicitly.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36479,"byte_end":36527,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36528,"byte_end":36559,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/     .set_boundaries(&[Boundary::Hyphen])","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36560,"byte_end":36604,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/     .set_pattern(Pattern::Lowercase)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36605,"byte_end":36645,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/     .set_delim(\"_\");","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36646,"byte_end":36670,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(\"dialoguebox_border_shadow\", conv.convert(s));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36671,"byte_end":36732,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36733,"byte_end":36740,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36741,"byte_end":36744,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Or you can use `Converter` when you are trying to make a unique case","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36745,"byte_end":36817,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ not provided as a variant of `Case`.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36818,"byte_end":36858,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36859,"byte_end":36862,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36863,"byte_end":36870,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use convert_case::{Boundary, Case, Casing, Converter, Pattern};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36871,"byte_end":36938,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36939,"byte_end":36942,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let dot_camel = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36943,"byte_end":36979,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     .set_boundaries(&[Boundary::LowerUpper, Boundary::LowerDigit])","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":36980,"byte_end":37050,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/     .set_pattern(Pattern::Camel)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37051,"byte_end":37087,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/     .set_delim(\".\");","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37088,"byte_end":37112,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(\"collision.Shape.2d\", dot_camel.convert(\"CollisionShape2D\"));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37113,"byte_end":37189,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37190,"byte_end":37197,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":36},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37275,"byte_end":37285,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"name":"boundaries","qualname":"::converter::Converter::boundaries","value":"std::vec::Vec<segmentation::Boundary>","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" How a string is segmented into words.\n","sig":null,"attributes":[{"value":"/ How a string is segmented into words.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37225,"byte_end":37266,"line_start":58,"line_end":58,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":37},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37530,"byte_end":37537,"line_start":64,"line_end":64,"column_start":9,"column_end":16},"name":"pattern","qualname":"::converter::Converter::pattern","value":"std::option::Option<pattern::Pattern>","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" How each word is mutated before joining.  In the case that there is no pattern, none of the\n words will be mutated before joining and will maintain whatever case they were in the\n original string.\n","sig":null,"attributes":[{"value":"/ How each word is mutated before joining.  In the case that there is no pattern, none of the","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37307,"byte_end":37402,"line_start":61,"line_end":61,"column_start":5,"column_end":100}},{"value":"/ words will be mutated before joining and will maintain whatever case they were in the","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37407,"byte_end":37496,"line_start":62,"line_end":62,"column_start":5,"column_end":94}},{"value":"/ original string.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37501,"byte_end":37521,"line_start":63,"line_end":63,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":38},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37621,"byte_end":37626,"line_start":67,"line_end":67,"column_start":9,"column_end":14},"name":"delim","qualname":"::converter::Converter::delim","value":"std::string::String","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" The string used to join mutated words together.\n","sig":null,"attributes":[{"value":"/ The string used to join mutated words together.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37561,"byte_end":37612,"line_start":66,"line_end":66,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38282,"byte_end":38285,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"new","qualname":"<Converter>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Converter` with default fields.  This is the same as `Default::default()`.\n The `Converter` will use `Boundary::defaults()` for boundaries, no pattern, and an empty\n string as a delimeter.\n ```\n use convert_case::Converter;","sig":null,"attributes":[{"value":"/ Creates a new `Converter` with default fields.  This is the same as `Default::default()`.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37862,"byte_end":37955,"line_start":81,"line_end":81,"column_start":5,"column_end":98}},{"value":"/ The `Converter` will use `Boundary::defaults()` for boundaries, no pattern, and an empty","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37960,"byte_end":38052,"line_start":82,"line_end":82,"column_start":5,"column_end":97}},{"value":"/ string as a delimeter.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38057,"byte_end":38083,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38088,"byte_end":38095,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Converter;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38100,"byte_end":38132,"line_start":85,"line_end":85,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38137,"byte_end":38140,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let conv = Converter::new();","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38145,"byte_end":38177,"line_start":87,"line_end":87,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(\"DeathPerennialQUEST\", conv.convert(\"Death-Perennial QUEST\"))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38182,"byte_end":38258,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38263,"byte_end":38270,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38586,"byte_end":38593,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"convert","qualname":"<Converter>::convert","value":"pub fn convert<T>(&Self, T) -> String where T: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Converts a string.\n ```\n use convert_case::{Case, Converter};","sig":null,"attributes":[{"value":"/ Converts a string.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38333,"byte_end":38355,"line_start":94,"line_end":94,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38360,"byte_end":38367,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Converter};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38372,"byte_end":38412,"line_start":96,"line_end":96,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38417,"byte_end":38420,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38425,"byte_end":38456,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/     .to_case(Case::Camel);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38461,"byte_end":38491,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"xmlHttpRequest\", conv.convert(\"XML_HTTP_Request\"))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38496,"byte_end":38562,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38567,"byte_end":38574,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39184,"byte_end":39191,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"to_case","qualname":"<Converter>::to_case","value":"pub fn to_case(Self, Case) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the pattern and delimiter to those associated with the given case.\n ```\n use convert_case::{Case, Converter};","sig":null,"attributes":[{"value":"/ Set the pattern and delimiter to those associated with the given case.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38883,"byte_end":38957,"line_start":114,"line_end":114,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38962,"byte_end":38969,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Converter};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":38974,"byte_end":39014,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39019,"byte_end":39022,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39027,"byte_end":39058,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/     .to_case(Case::Pascal);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39063,"byte_end":39094,"line_start":119,"line_end":119,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(\"VariableName\", conv.convert(\"variable name\"))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39099,"byte_end":39160,"line_start":120,"line_end":120,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39165,"byte_end":39172,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39749,"byte_end":39758,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"from_case","qualname":"<Converter>::from_case","value":"pub fn from_case(Self, Case) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the boundaries to those associated with the provided case.  This is used\n by the `from_case` function in the `Casing` trait.\n ```\n use convert_case::{Case, Converter};","sig":null,"attributes":[{"value":"/ Sets the boundaries to those associated with the provided case.  This is used","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39340,"byte_end":39421,"line_start":128,"line_end":128,"column_start":5,"column_end":86}},{"value":"/ by the `from_case` function in the `Casing` trait.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39426,"byte_end":39480,"line_start":129,"line_end":129,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39485,"byte_end":39492,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Converter};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39497,"byte_end":39537,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39542,"byte_end":39545,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39550,"byte_end":39581,"line_start":133,"line_end":133,"column_start":5,"column_end":36}},{"value":"/     .from_case(Case::Snake)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39586,"byte_end":39617,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/     .to_case(Case::Title);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39622,"byte_end":39652,"line_start":135,"line_end":135,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"Dot Productvalue\", conv.convert(\"dot_productValue\"))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39657,"byte_end":39725,"line_start":136,"line_end":136,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39730,"byte_end":39737,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40238,"byte_end":40252,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"set_boundaries","qualname":"<Converter>::set_boundaries","value":"pub fn set_boundaries(Self, &[Boundary]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the boundaries to those provided.\n ```\n use convert_case::{Boundary, Case, Converter};","sig":null,"attributes":[{"value":"/ Sets the boundaries to those provided.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39860,"byte_end":39902,"line_start":143,"line_end":143,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39907,"byte_end":39914,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Boundary, Case, Converter};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39919,"byte_end":39969,"line_start":145,"line_end":145,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39974,"byte_end":39977,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":39982,"byte_end":40013,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/     .set_boundaries(&[Boundary::Underscore, Boundary::LowerUpper])","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40018,"byte_end":40088,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/     .to_case(Case::Lower);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40093,"byte_end":40123,"line_start":149,"line_end":149,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"panic attack dream theater\", conv.convert(\"panicAttack_dreamTheater\"))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40128,"byte_end":40214,"line_start":150,"line_end":150,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40219,"byte_end":40226,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40732,"byte_end":40744,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"add_boundary","qualname":"<Converter>::add_boundary","value":"pub fn add_boundary(Self, Boundary) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a boundary to the list of boundaries.\n ```\n use convert_case::{Boundary, Case, Converter};","sig":null,"attributes":[{"value":"/ Adds a boundary to the list of boundaries.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40353,"byte_end":40399,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40404,"byte_end":40411,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Boundary, Case, Converter};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40416,"byte_end":40466,"line_start":159,"line_end":159,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40471,"byte_end":40474,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40479,"byte_end":40510,"line_start":161,"line_end":161,"column_start":5,"column_end":36}},{"value":"/     .from_case(Case::Title)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40515,"byte_end":40546,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/     .add_boundary(Boundary::Hyphen)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40551,"byte_end":40590,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/     .to_case(Case::Snake);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40595,"byte_end":40625,"line_start":164,"line_end":164,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"my_biography_video_1\", conv.convert(\"My Biography - Video 1\"))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40630,"byte_end":40708,"line_start":165,"line_end":165,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40713,"byte_end":40720,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41249,"byte_end":41263,"line_start":182,"line_end":182,"column_start":12,"column_end":26},"name":"add_boundaries","qualname":"<Converter>::add_boundaries","value":"pub fn add_boundaries(Self, &[Boundary]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a vector of boundaries to the list of boundaries.\n ```\n use convert_case::{Boundary, Case, Converter};","sig":null,"attributes":[{"value":"/ Adds a vector of boundaries to the list of boundaries.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40835,"byte_end":40893,"line_start":172,"line_end":172,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40898,"byte_end":40905,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Boundary, Case, Converter};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40910,"byte_end":40960,"line_start":174,"line_end":174,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40965,"byte_end":40968,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":40973,"byte_end":41004,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/     .from_case(Case::Kebab)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41009,"byte_end":41040,"line_start":177,"line_end":177,"column_start":5,"column_end":36}},{"value":"/     .to_case(Case::Title)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41045,"byte_end":41074,"line_start":178,"line_end":178,"column_start":5,"column_end":34}},{"value":"/     .add_boundaries(&[Boundary::Underscore, Boundary::LowerUpper]);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41079,"byte_end":41150,"line_start":179,"line_end":179,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(\"2020 10 First Day\", conv.convert(\"2020-10_firstDay\"));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41155,"byte_end":41225,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41230,"byte_end":41237,"line_start":181,"line_end":181,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41721,"byte_end":41736,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"remove_boundary","qualname":"<Converter>::remove_boundary","value":"pub fn remove_boundary(Self, Boundary) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes a boundary from the list of boundaries if it exists.\n ```\n use convert_case::{Boundary, Case, Converter};","sig":null,"attributes":[{"value":"/ Removes a boundary from the list of boundaries if it exists.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41361,"byte_end":41425,"line_start":187,"line_end":187,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41430,"byte_end":41437,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Boundary, Case, Converter};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41442,"byte_end":41492,"line_start":189,"line_end":189,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41497,"byte_end":41500,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41505,"byte_end":41536,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/     .remove_boundary(Boundary::Acronym)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41541,"byte_end":41584,"line_start":192,"line_end":192,"column_start":5,"column_end":48}},{"value":"/     .to_case(Case::Kebab);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41589,"byte_end":41619,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"httprequest-parser\", conv.convert(\"HTTPRequest_parser\"));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41624,"byte_end":41697,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41702,"byte_end":41709,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42232,"byte_end":42249,"line_start":210,"line_end":210,"column_start":12,"column_end":29},"name":"remove_boundaries","qualname":"<Converter>::remove_boundaries","value":"pub fn remove_boundaries(Self, &[Boundary]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes all the provided boundaries from the list of boundaries if it exists.\n ```\n use convert_case::{Boundary, Case, Converter};","sig":null,"attributes":[{"value":"/ Removes all the provided boundaries from the list of boundaries if it exists.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41839,"byte_end":41920,"line_start":201,"line_end":201,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41925,"byte_end":41932,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Boundary, Case, Converter};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41937,"byte_end":41987,"line_start":203,"line_end":203,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":41992,"byte_end":41995,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42000,"byte_end":42031,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/     .remove_boundaries(&Boundary::digits())","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42036,"byte_end":42083,"line_start":206,"line_end":206,"column_start":5,"column_end":52}},{"value":"/     .to_case(Case::Snake);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42088,"byte_end":42118,"line_start":207,"line_end":207,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"c04_s03_path_finding.pdf\", conv.convert(\"C04 S03 Path Finding.pdf\"));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42123,"byte_end":42208,"line_start":208,"line_end":208,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42213,"byte_end":42220,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42674,"byte_end":42683,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"set_delim","qualname":"<Converter>::set_delim","value":"pub fn set_delim<T>(Self, T) -> Self where T: ToString","parent":null,"children":[],"decl_id":null,"docs":" Sets the delimeter.\n ```\n use convert_case::{Case, Converter};","sig":null,"attributes":[{"value":"/ Sets the delimeter.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42393,"byte_end":42416,"line_start":217,"line_end":217,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42421,"byte_end":42428,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Converter};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42433,"byte_end":42473,"line_start":219,"line_end":219,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42478,"byte_end":42481,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42486,"byte_end":42517,"line_start":221,"line_end":221,"column_start":5,"column_end":36}},{"value":"/     .to_case(Case::Snake)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42522,"byte_end":42551,"line_start":222,"line_end":222,"column_start":5,"column_end":34}},{"value":"/     .set_delim(\".\");","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42556,"byte_end":42580,"line_start":223,"line_end":223,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(\"lower.with.dots\", conv.convert(\"LowerWithDots\"));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42585,"byte_end":42650,"line_start":224,"line_end":224,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42655,"byte_end":42662,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43106,"byte_end":43118,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"remove_delim","qualname":"<Converter>::remove_delim","value":"pub fn remove_delim(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the delimeter to an empty string.\n ```\n use convert_case::{Case, Converter};","sig":null,"attributes":[{"value":"/ Sets the delimeter to an empty string.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42808,"byte_end":42850,"line_start":234,"line_end":234,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42855,"byte_end":42862,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Converter};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42867,"byte_end":42907,"line_start":236,"line_end":236,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42912,"byte_end":42915,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42920,"byte_end":42951,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/     .to_case(Case::Snake)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42956,"byte_end":42985,"line_start":239,"line_end":239,"column_start":5,"column_end":34}},{"value":"/     .remove_delim();","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":42990,"byte_end":43014,"line_start":240,"line_end":240,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(\"nodelimshere\", conv.convert(\"No Delims Here\"));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43019,"byte_end":43082,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43087,"byte_end":43094,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43491,"byte_end":43502,"line_start":257,"line_end":257,"column_start":12,"column_end":23},"name":"set_pattern","qualname":"<Converter>::set_pattern","value":"pub fn set_pattern(Self, Pattern) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the pattern.\n ```\n use convert_case::{Case, Converter, Pattern};","sig":null,"attributes":[{"value":"/ Sets the pattern.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43199,"byte_end":43220,"line_start":248,"line_end":248,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43225,"byte_end":43232,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Converter, Pattern};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43237,"byte_end":43286,"line_start":250,"line_end":250,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43291,"byte_end":43294,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43299,"byte_end":43330,"line_start":252,"line_end":252,"column_start":5,"column_end":36}},{"value":"/     .set_delim(\"_\")","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43335,"byte_end":43358,"line_start":253,"line_end":253,"column_start":5,"column_end":28}},{"value":"/     .set_pattern(Pattern::Sentence);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43363,"byte_end":43403,"line_start":254,"line_end":254,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(\"Bjarne_case\", conv.convert(\"BJARNE CASE\"));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43408,"byte_end":43467,"line_start":255,"line_end":255,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43472,"byte_end":43479,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":44053,"byte_end":44067,"line_start":273,"line_end":273,"column_start":12,"column_end":26},"name":"remove_pattern","qualname":"<Converter>::remove_pattern","value":"pub fn remove_pattern(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the pattern field to `None`.  Where there is no pattern, a character's case is never\n mutated and will be maintained at the end of conversion.\n ```\n use convert_case::{Case, Converter};","sig":null,"attributes":[{"value":"/ Sets the pattern field to `None`.  Where there is no pattern, a character's case is never","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43591,"byte_end":43684,"line_start":262,"line_end":262,"column_start":5,"column_end":98}},{"value":"/ mutated and will be maintained at the end of conversion.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43689,"byte_end":43749,"line_start":263,"line_end":263,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43754,"byte_end":43761,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Converter};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43766,"byte_end":43806,"line_start":265,"line_end":265,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43811,"byte_end":43814,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43819,"byte_end":43850,"line_start":267,"line_end":267,"column_start":5,"column_end":36}},{"value":"/     .from_case(Case::Title)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43855,"byte_end":43886,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/     .to_case(Case::Snake)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43891,"byte_end":43920,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/     .remove_pattern();","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43925,"byte_end":43951,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(\"KoRn_Alone_I_Break\", conv.convert(\"KoRn Alone I Break\"));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":43956,"byte_end":44029,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":44034,"byte_end":44041,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":229},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49112,"byte_end":49121,"line_start":59,"line_end":59,"column_start":5,"column_end":14},"name":"Lowercase","qualname":"::pattern::Pattern::Lowercase","value":"Pattern::Lowercase","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Lowercase patterns make all words lowercase.\n ```\n use convert_case::Pattern;\n assert_eq!(\n     vec![\"case\", \"conversion\", \"library\"],\n     Pattern::Lowercase.mutate(&[\"Case\", \"CONVERSION\", \"library\"])\n );\n ```\n","sig":null,"attributes":[{"value":"/ Lowercase patterns make all words lowercase.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":48844,"byte_end":48892,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":48897,"byte_end":48904,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Pattern;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":48909,"byte_end":48939,"line_start":53,"line_end":53,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":48944,"byte_end":48959,"line_start":54,"line_end":54,"column_start":5,"column_end":20}},{"value":"/     vec![\"case\", \"conversion\", \"library\"],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":48964,"byte_end":49010,"line_start":55,"line_end":55,"column_start":5,"column_end":51}},{"value":"/     Pattern::Lowercase.mutate(&[\"Case\", \"CONVERSION\", \"library\"])","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49015,"byte_end":49084,"line_start":56,"line_end":56,"column_start":5,"column_end":74}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49089,"byte_end":49095,"line_start":57,"line_end":57,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49100,"byte_end":49107,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":231},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49396,"byte_end":49405,"line_start":69,"line_end":69,"column_start":5,"column_end":14},"name":"Uppercase","qualname":"::pattern::Pattern::Uppercase","value":"Pattern::Uppercase","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Uppercase patterns make all words uppercase.\n ```\n use convert_case::Pattern;\n assert_eq!(\n     vec![\"CASE\", \"CONVERSION\", \"LIBRARY\"],\n     Pattern::Uppercase.mutate(&[\"Case\", \"CONVERSION\", \"library\"])\n );\n ```\n","sig":null,"attributes":[{"value":"/ Uppercase patterns make all words uppercase.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49128,"byte_end":49176,"line_start":61,"line_end":61,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49181,"byte_end":49188,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Pattern;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49193,"byte_end":49223,"line_start":63,"line_end":63,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49228,"byte_end":49243,"line_start":64,"line_end":64,"column_start":5,"column_end":20}},{"value":"/     vec![\"CASE\", \"CONVERSION\", \"LIBRARY\"],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49248,"byte_end":49294,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/     Pattern::Uppercase.mutate(&[\"Case\", \"CONVERSION\", \"library\"])","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49299,"byte_end":49368,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49373,"byte_end":49379,"line_start":67,"line_end":67,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49384,"byte_end":49391,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":233},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49754,"byte_end":49761,"line_start":80,"line_end":80,"column_start":5,"column_end":12},"name":"Capital","qualname":"::pattern::Pattern::Capital","value":"Pattern::Capital","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Capital patterns makes the first letter of each word uppercase\n and the remaining letters of each word lowercase.\n ```\n use convert_case::Pattern;\n assert_eq!(\n     vec![\"Case\", \"Conversion\", \"Library\"],\n     Pattern::Capital.mutate(&[\"Case\", \"CONVERSION\", \"library\"])\n );\n ```\n","sig":null,"attributes":[{"value":"/ Capital patterns makes the first letter of each word uppercase","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49412,"byte_end":49478,"line_start":71,"line_end":71,"column_start":5,"column_end":71}},{"value":"/ and the remaining letters of each word lowercase.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49483,"byte_end":49536,"line_start":72,"line_end":72,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49541,"byte_end":49548,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Pattern;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49553,"byte_end":49583,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49588,"byte_end":49603,"line_start":75,"line_end":75,"column_start":5,"column_end":20}},{"value":"/     vec![\"Case\", \"Conversion\", \"Library\"],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49608,"byte_end":49654,"line_start":76,"line_end":76,"column_start":5,"column_end":51}},{"value":"/     Pattern::Capital.mutate(&[\"Case\", \"CONVERSION\", \"library\"])","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49659,"byte_end":49726,"line_start":77,"line_end":77,"column_start":5,"column_end":72}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49731,"byte_end":49737,"line_start":78,"line_end":78,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49742,"byte_end":49749,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":235},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50076,"byte_end":50084,"line_start":91,"line_end":91,"column_start":5,"column_end":13},"name":"Sentence","qualname":"::pattern::Pattern::Sentence","value":"Pattern::Sentence","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Capital patterns make the first word capitalized and the\n remaining lowercase.\n ```\n use convert_case::Pattern;\n assert_eq!(\n     vec![\"Case\", \"conversion\", \"library\"],\n     Pattern::Sentence.mutate(&[\"Case\", \"CONVERSION\", \"library\"])\n );\n ```\n","sig":null,"attributes":[{"value":"/ Capital patterns make the first word capitalized and the","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49768,"byte_end":49828,"line_start":82,"line_end":82,"column_start":5,"column_end":65}},{"value":"/ remaining lowercase.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49833,"byte_end":49857,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49862,"byte_end":49869,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Pattern;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49874,"byte_end":49904,"line_start":85,"line_end":85,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49909,"byte_end":49924,"line_start":86,"line_end":86,"column_start":5,"column_end":20}},{"value":"/     vec![\"Case\", \"conversion\", \"library\"],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49929,"byte_end":49975,"line_start":87,"line_end":87,"column_start":5,"column_end":51}},{"value":"/     Pattern::Sentence.mutate(&[\"Case\", \"CONVERSION\", \"library\"])","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":49980,"byte_end":50048,"line_start":88,"line_end":88,"column_start":5,"column_end":73}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50053,"byte_end":50059,"line_start":89,"line_end":89,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50064,"byte_end":50071,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":237},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50394,"byte_end":50399,"line_start":102,"line_end":102,"column_start":5,"column_end":10},"name":"Camel","qualname":"::pattern::Pattern::Camel","value":"Pattern::Camel","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Camel patterns make the first word lowercase and the remaining\n capitalized.\n ```\n use convert_case::Pattern;\n assert_eq!(\n     vec![\"case\", \"Conversion\", \"Library\"],\n     Pattern::Camel.mutate(&[\"Case\", \"CONVERSION\", \"library\"])\n );\n ```\n","sig":null,"attributes":[{"value":"/ Camel patterns make the first word lowercase and the remaining","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50091,"byte_end":50157,"line_start":93,"line_end":93,"column_start":5,"column_end":71}},{"value":"/ capitalized.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50162,"byte_end":50178,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50183,"byte_end":50190,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Pattern;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50195,"byte_end":50225,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50230,"byte_end":50245,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"/     vec![\"case\", \"Conversion\", \"Library\"],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50250,"byte_end":50296,"line_start":98,"line_end":98,"column_start":5,"column_end":51}},{"value":"/     Pattern::Camel.mutate(&[\"Case\", \"CONVERSION\", \"library\"])","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50301,"byte_end":50366,"line_start":99,"line_end":99,"column_start":5,"column_end":70}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50371,"byte_end":50377,"line_start":100,"line_end":100,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50382,"byte_end":50389,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":239},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":51025,"byte_end":51036,"line_start":119,"line_end":119,"column_start":5,"column_end":16},"name":"Alternating","qualname":"::pattern::Pattern::Alternating","value":"Pattern::Alternating","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Alternating patterns make each letter of each word alternate\n between lowercase and uppercase.  They alternate across words,\n which means the last letter of one word and the first letter of the\n next will not be the same letter casing.\n ```\n use convert_case::Pattern;\n assert_eq!(\n     vec![\"cAsE\", \"cOnVeRsIoN\", \"lIbRaRy\"],\n     Pattern::Alternating.mutate(&[\"Case\", \"CONVERSION\", \"library\"])\n );\n assert_eq!(\n     vec![\"aNoThEr\", \"ExAmPlE\"],\n     Pattern::Alternating.mutate(&[\"Another\", \"Example\"]),\n );\n ```\n","sig":null,"attributes":[{"value":"/ Alternating patterns make each letter of each word alternate","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50406,"byte_end":50470,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/ between lowercase and uppercase.  They alternate across words,","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50475,"byte_end":50541,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/ which means the last letter of one word and the first letter of the","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50546,"byte_end":50617,"line_start":106,"line_end":106,"column_start":5,"column_end":76}},{"value":"/ next will not be the same letter casing.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50622,"byte_end":50666,"line_start":107,"line_end":107,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50671,"byte_end":50678,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Pattern;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50683,"byte_end":50713,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50718,"byte_end":50733,"line_start":110,"line_end":110,"column_start":5,"column_end":20}},{"value":"/     vec![\"cAsE\", \"cOnVeRsIoN\", \"lIbRaRy\"],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50738,"byte_end":50784,"line_start":111,"line_end":111,"column_start":5,"column_end":51}},{"value":"/     Pattern::Alternating.mutate(&[\"Case\", \"CONVERSION\", \"library\"])","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50789,"byte_end":50860,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50865,"byte_end":50871,"line_start":113,"line_end":113,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50876,"byte_end":50891,"line_start":114,"line_end":114,"column_start":5,"column_end":20}},{"value":"/     vec![\"aNoThEr\", \"ExAmPlE\"],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50896,"byte_end":50931,"line_start":115,"line_end":115,"column_start":5,"column_end":40}},{"value":"/     Pattern::Alternating.mutate(&[\"Another\", \"Example\"]),","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":50936,"byte_end":50997,"line_start":116,"line_end":116,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":51002,"byte_end":51008,"line_start":117,"line_end":117,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":51013,"byte_end":51020,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":241},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":51382,"byte_end":51388,"line_start":130,"line_end":130,"column_start":5,"column_end":11},"name":"Toggle","qualname":"::pattern::Pattern::Toggle","value":"Pattern::Toggle","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Toggle patterns have the first letter of each word uppercase\n and the remaining letters of each word uppercase.\n ```\n use convert_case::Pattern;\n assert_eq!(\n     vec![\"cASE\", \"cONVERSION\", \"lIBRARY\"],\n     Pattern::Toggle.mutate(&[\"Case\", \"CONVERSION\", \"library\"])\n );\n ```\n","sig":null,"attributes":[{"value":"/ Toggle patterns have the first letter of each word uppercase","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":51043,"byte_end":51107,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ and the remaining letters of each word uppercase.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":51112,"byte_end":51165,"line_start":122,"line_end":122,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":51170,"byte_end":51177,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Pattern;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":51182,"byte_end":51212,"line_start":124,"line_end":124,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":51217,"byte_end":51232,"line_start":125,"line_end":125,"column_start":5,"column_end":20}},{"value":"/     vec![\"cASE\", \"cONVERSION\", \"lIBRARY\"],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":51237,"byte_end":51283,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/     Pattern::Toggle.mutate(&[\"Case\", \"CONVERSION\", \"library\"])","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":51288,"byte_end":51354,"line_start":127,"line_end":127,"column_start":5,"column_end":71}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":51359,"byte_end":51365,"line_start":128,"line_end":128,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":51370,"byte_end":51377,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":228},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":48830,"byte_end":48837,"line_start":50,"line_end":50,"column_start":10,"column_end":17},"name":"Pattern","qualname":"::pattern::Pattern","value":"pub enum Pattern {\n    Lowercase,\n    Uppercase,\n    Capital,\n    Sentence,\n    Camel,\n    Alternating,\n    Toggle,\n}","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241}],"decl_id":null,"docs":" A pattern is how a set of words is mutated before joining with\n a delimeter.","sig":null,"attributes":[{"value":"/ A pattern is how a set of words is mutated before joining with","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":48554,"byte_end":48620,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/ a delimeter.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":48621,"byte_end":48637,"line_start":45,"line_end":45,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":48638,"byte_end":48641,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The `Random` and `PseudoRandom` patterns are used for their respective cases","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":48642,"byte_end":48722,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/ and are only available in the \"random\" feature. ","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":48723,"byte_end":48775,"line_start":48,"line_end":48,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":53231,"byte_end":53237,"line_start":176,"line_end":176,"column_start":12,"column_end":18},"name":"mutate","qualname":"<Pattern>::mutate","value":"pub fn mutate(&Self, &[&str]) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" Generates a vector of new `String`s in the right pattern given\n the input strings.\n ```\n use convert_case::Pattern;","sig":null,"attributes":[{"value":"/ Generates a vector of new `String`s in the right pattern given","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":52917,"byte_end":52983,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"/ the input strings.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":52988,"byte_end":53010,"line_start":167,"line_end":167,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":53015,"byte_end":53022,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Pattern;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":53027,"byte_end":53057,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":53062,"byte_end":53065,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":53070,"byte_end":53085,"line_start":171,"line_end":171,"column_start":5,"column_end":20}},{"value":"/     vec![\"crack\", \"the\", \"skye\"],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":53090,"byte_end":53127,"line_start":172,"line_end":172,"column_start":5,"column_end":42}},{"value":"/     Pattern::Lowercase.mutate(&vec![\"CRACK\", \"the\", \"Skye\"]),","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":53132,"byte_end":53197,"line_start":173,"line_end":173,"column_start":5,"column_end":70}},{"value":"/ )","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":53202,"byte_end":53207,"line_start":174,"line_end":174,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":53212,"byte_end":53219,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":255},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60567,"byte_end":60573,"line_start":43,"line_end":43,"column_start":5,"column_end":11},"name":"Hyphen","qualname":"::segmentation::Boundary::Hyphen","value":"Boundary::Hyphen","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Splits on `-`, consuming the character on segmentation.\n ```\n use convert_case::Boundary;\n assert_eq!(\n     vec![Boundary::Hyphen],\n     Boundary::list_from(\"-\")\n );\n ```\n","sig":null,"attributes":[{"value":"/ Splits on `-`, consuming the character on segmentation.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60339,"byte_end":60398,"line_start":35,"line_end":35,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60403,"byte_end":60410,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60415,"byte_end":60446,"line_start":37,"line_end":37,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60451,"byte_end":60466,"line_start":38,"line_end":38,"column_start":5,"column_end":20}},{"value":"/     vec![Boundary::Hyphen],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60471,"byte_end":60502,"line_start":39,"line_end":39,"column_start":5,"column_end":36}},{"value":"/     Boundary::list_from(\"-\")","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60507,"byte_end":60539,"line_start":40,"line_end":40,"column_start":5,"column_end":37}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60544,"byte_end":60550,"line_start":41,"line_end":41,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60555,"byte_end":60562,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":257},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60812,"byte_end":60822,"line_start":53,"line_end":53,"column_start":5,"column_end":15},"name":"Underscore","qualname":"::segmentation::Boundary::Underscore","value":"Boundary::Underscore","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Splits on `_`, consuming the character on segmentation.\n ```\n use convert_case::Boundary;\n assert_eq!(\n     vec![Boundary::Underscore],\n     Boundary::list_from(\"_\")\n );\n ```\n","sig":null,"attributes":[{"value":"/ Splits on `_`, consuming the character on segmentation.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60580,"byte_end":60639,"line_start":45,"line_end":45,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60644,"byte_end":60651,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60656,"byte_end":60687,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60692,"byte_end":60707,"line_start":48,"line_end":48,"column_start":5,"column_end":20}},{"value":"/     vec![Boundary::Underscore],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60712,"byte_end":60747,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"/     Boundary::list_from(\"_\")","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60752,"byte_end":60784,"line_start":50,"line_end":50,"column_start":5,"column_end":37}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60789,"byte_end":60795,"line_start":51,"line_end":51,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60800,"byte_end":60807,"line_start":52,"line_end":52,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":259},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61058,"byte_end":61063,"line_start":63,"line_end":63,"column_start":5,"column_end":10},"name":"Space","qualname":"::segmentation::Boundary::Space","value":"Boundary::Space","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Splits on space, consuming the character on segmentation.\n ```\n use convert_case::Boundary;\n assert_eq!(\n     vec![Boundary::Space],\n     Boundary::list_from(\" \")\n );\n ```\n","sig":null,"attributes":[{"value":"/ Splits on space, consuming the character on segmentation.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60829,"byte_end":60890,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60895,"byte_end":60902,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60907,"byte_end":60938,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60943,"byte_end":60958,"line_start":58,"line_end":58,"column_start":5,"column_end":20}},{"value":"/     vec![Boundary::Space],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60963,"byte_end":60993,"line_start":59,"line_end":59,"column_start":5,"column_end":35}},{"value":"/     Boundary::list_from(\" \")","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60998,"byte_end":61030,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61035,"byte_end":61041,"line_start":61,"line_end":61,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61046,"byte_end":61053,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":261},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61404,"byte_end":61414,"line_start":74,"line_end":74,"column_start":5,"column_end":15},"name":"UpperLower","qualname":"::segmentation::Boundary::UpperLower","value":"Boundary::UpperLower","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Splits where an uppercase letter is followed by a lowercase letter.  This is seldom used,\n and is not included in the [defaults](Boundary::defaults).\n ```\n use convert_case::Boundary;\n assert_eq!(\n     vec![Boundary::UpperLower],\n     Boundary::list_from(\"Aa\")\n );\n ```\n","sig":null,"attributes":[{"value":"/ Splits where an uppercase letter is followed by a lowercase letter.  This is seldom used,","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61070,"byte_end":61163,"line_start":65,"line_end":65,"column_start":5,"column_end":98}},{"value":"/ and is not included in the [defaults](Boundary::defaults).","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61168,"byte_end":61230,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61235,"byte_end":61242,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61247,"byte_end":61278,"line_start":68,"line_end":68,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61283,"byte_end":61298,"line_start":69,"line_end":69,"column_start":5,"column_end":20}},{"value":"/     vec![Boundary::UpperLower],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61303,"byte_end":61338,"line_start":70,"line_end":70,"column_start":5,"column_end":40}},{"value":"/     Boundary::list_from(\"Aa\")","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61343,"byte_end":61376,"line_start":71,"line_end":71,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61381,"byte_end":61387,"line_start":72,"line_end":72,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61392,"byte_end":61399,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":263},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61666,"byte_end":61676,"line_start":84,"line_end":84,"column_start":5,"column_end":15},"name":"LowerUpper","qualname":"::segmentation::Boundary::LowerUpper","value":"Boundary::LowerUpper","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Splits where a lowercase letter is followed by an uppercase letter.\n ```\n use convert_case::Boundary;\n assert_eq!(\n     vec![Boundary::LowerUpper],\n     Boundary::list_from(\"aA\")\n );\n ```\n","sig":null,"attributes":[{"value":"/ Splits where a lowercase letter is followed by an uppercase letter.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61421,"byte_end":61492,"line_start":76,"line_end":76,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61497,"byte_end":61504,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61509,"byte_end":61540,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61545,"byte_end":61560,"line_start":79,"line_end":79,"column_start":5,"column_end":20}},{"value":"/     vec![Boundary::LowerUpper],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61565,"byte_end":61600,"line_start":80,"line_end":80,"column_start":5,"column_end":40}},{"value":"/     Boundary::list_from(\"aA\")","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61605,"byte_end":61638,"line_start":81,"line_end":81,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61643,"byte_end":61649,"line_start":82,"line_end":82,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61654,"byte_end":61661,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":265},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61915,"byte_end":61925,"line_start":94,"line_end":94,"column_start":5,"column_end":15},"name":"DigitUpper","qualname":"::segmentation::Boundary::DigitUpper","value":"Boundary::DigitUpper","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Splits where digit is followed by an uppercase letter.\n ```\n use convert_case::Boundary;\n assert_eq!(\n     vec![Boundary::DigitUpper],\n     Boundary::list_from(\"1A\")\n );\n ```\n","sig":null,"attributes":[{"value":"/ Splits where digit is followed by an uppercase letter.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61683,"byte_end":61741,"line_start":86,"line_end":86,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61746,"byte_end":61753,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61758,"byte_end":61789,"line_start":88,"line_end":88,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61794,"byte_end":61809,"line_start":89,"line_end":89,"column_start":5,"column_end":20}},{"value":"/     vec![Boundary::DigitUpper],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61814,"byte_end":61849,"line_start":90,"line_end":90,"column_start":5,"column_end":40}},{"value":"/     Boundary::list_from(\"1A\")","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61854,"byte_end":61887,"line_start":91,"line_end":91,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61892,"byte_end":61898,"line_start":92,"line_end":92,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61903,"byte_end":61910,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":267},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62166,"byte_end":62176,"line_start":104,"line_end":104,"column_start":5,"column_end":15},"name":"UpperDigit","qualname":"::segmentation::Boundary::UpperDigit","value":"Boundary::UpperDigit","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Splits where an uppercase letter is followed by a digit.\n ```\n use convert_case::Boundary;\n assert_eq!(\n     vec![Boundary::UpperDigit],\n     Boundary::list_from(\"A1\")\n );\n ```\n","sig":null,"attributes":[{"value":"/ Splits where an uppercase letter is followed by a digit.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61932,"byte_end":61992,"line_start":96,"line_end":96,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":61997,"byte_end":62004,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62009,"byte_end":62040,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62045,"byte_end":62060,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/     vec![Boundary::UpperDigit],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62065,"byte_end":62100,"line_start":100,"line_end":100,"column_start":5,"column_end":40}},{"value":"/     Boundary::list_from(\"A1\")","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62105,"byte_end":62138,"line_start":101,"line_end":101,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62143,"byte_end":62149,"line_start":102,"line_end":102,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62154,"byte_end":62161,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":269},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62414,"byte_end":62424,"line_start":114,"line_end":114,"column_start":5,"column_end":15},"name":"DigitLower","qualname":"::segmentation::Boundary::DigitLower","value":"Boundary::DigitLower","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Splits where digit is followed by a lowercase letter.\n ```\n use convert_case::Boundary;\n assert_eq!(\n     vec![Boundary::DigitLower],\n     Boundary::list_from(\"1a\")\n );\n ```\n","sig":null,"attributes":[{"value":"/ Splits where digit is followed by a lowercase letter.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62183,"byte_end":62240,"line_start":106,"line_end":106,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62245,"byte_end":62252,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62257,"byte_end":62288,"line_start":108,"line_end":108,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62293,"byte_end":62308,"line_start":109,"line_end":109,"column_start":5,"column_end":20}},{"value":"/     vec![Boundary::DigitLower],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62313,"byte_end":62348,"line_start":110,"line_end":110,"column_start":5,"column_end":40}},{"value":"/     Boundary::list_from(\"1a\")","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62353,"byte_end":62386,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62391,"byte_end":62397,"line_start":112,"line_end":112,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62402,"byte_end":62409,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":271},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62664,"byte_end":62674,"line_start":124,"line_end":124,"column_start":5,"column_end":15},"name":"LowerDigit","qualname":"::segmentation::Boundary::LowerDigit","value":"Boundary::LowerDigit","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Splits where a lowercase letter is followed by a digit.\n ```\n use convert_case::Boundary;\n assert_eq!(\n     vec![Boundary::LowerDigit],\n     Boundary::list_from(\"a1\")\n );\n ```\n","sig":null,"attributes":[{"value":"/ Splits where a lowercase letter is followed by a digit.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62431,"byte_end":62490,"line_start":116,"line_end":116,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62495,"byte_end":62502,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62507,"byte_end":62538,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62543,"byte_end":62558,"line_start":119,"line_end":119,"column_start":5,"column_end":20}},{"value":"/     vec![Boundary::LowerDigit],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62563,"byte_end":62598,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/     Boundary::list_from(\"a1\")","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62603,"byte_end":62636,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62641,"byte_end":62647,"line_start":122,"line_end":122,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62652,"byte_end":62659,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":273},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63125,"byte_end":63132,"line_start":136,"line_end":136,"column_start":5,"column_end":12},"name":"Acronym","qualname":"::segmentation::Boundary::Acronym","value":"Boundary::Acronym","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Acronyms are identified by two uppercase letters followed by a lowercase letter.\n The word boundary is between the two uppercase letters.  For example, \"HTTPRequest\"\n would have an acronym boundary identified at \"PRe\" and split into \"HTTP\" and \"Request\".\n ```\n use convert_case::Boundary;\n assert_eq!(\n     vec![Boundary::Acronym],\n     Boundary::list_from(\"AAa\")\n );\n ```\n","sig":null,"attributes":[{"value":"/ Acronyms are identified by two uppercase letters followed by a lowercase letter.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62681,"byte_end":62765,"line_start":126,"line_end":126,"column_start":5,"column_end":89}},{"value":"/ The word boundary is between the two uppercase letters.  For example, \"HTTPRequest\"","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62770,"byte_end":62857,"line_start":127,"line_end":127,"column_start":5,"column_end":92}},{"value":"/ would have an acronym boundary identified at \"PRe\" and split into \"HTTP\" and \"Request\".","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62862,"byte_end":62953,"line_start":128,"line_end":128,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62958,"byte_end":62965,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":62970,"byte_end":63001,"line_start":130,"line_end":130,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63006,"byte_end":63021,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"/     vec![Boundary::Acronym],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63026,"byte_end":63058,"line_start":132,"line_end":132,"column_start":5,"column_end":37}},{"value":"/     Boundary::list_from(\"AAa\")","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63063,"byte_end":63097,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63102,"byte_end":63108,"line_start":134,"line_end":134,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63113,"byte_end":63120,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":254},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60324,"byte_end":60332,"line_start":34,"line_end":34,"column_start":10,"column_end":18},"name":"Boundary","qualname":"::segmentation::Boundary","value":"pub enum Boundary {\n    Hyphen,\n    Underscore,\n    Space,\n    UpperLower,\n    LowerUpper,\n    DigitUpper,\n    UpperDigit,\n    DigitLower,\n    LowerDigit,\n    Acronym,\n}","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":273}],"decl_id":null,"docs":" A boundary defines how a string is split into words.  Some boundaries, `Hyphen`, `Underscore`,\n and `Space`, consume the character they split on, whereas the other boundaries\n do not.","sig":null,"attributes":[{"value":"/ A boundary defines how a string is split into words.  Some boundaries, `Hyphen`, `Underscore`,","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59002,"byte_end":59100,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ and `Space`, consume the character they split on, whereas the other boundaries","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59101,"byte_end":59183,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/ do not.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59184,"byte_end":59195,"line_start":6,"line_end":6,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59196,"byte_end":59199,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The struct offers methods that return `Vec`s containing useful groups of boundaries.  It also","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59200,"byte_end":59297,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ contains the [`list_from`](Boundary::list_from) method which will generate a list of boundaries","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59298,"byte_end":59397,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"/ based on a string slice.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59398,"byte_end":59426,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59427,"byte_end":59430,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Note that all boundaries are distinct and do not share functionality.  That is, there is no","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59431,"byte_end":59526,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ such DigitLetter variant, because that would be equivalent to the current `DigitUpper` and","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59527,"byte_end":59621,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ `DigitLower` variants.  For common functionality, consider using","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59622,"byte_end":59690,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ some provided functions that return a list of boundaries.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59691,"byte_end":59752,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59753,"byte_end":59760,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use convert_case::{Boundary, Case, Casing, Converter};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59761,"byte_end":59819,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59820,"byte_end":59823,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59824,"byte_end":59839,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/     \"transformations_in_3d\",","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59840,"byte_end":59872,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/     \"TransformationsIn3D\"","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59873,"byte_end":59902,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/         .from_case(Case::Camel)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59903,"byte_end":59938,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/         .without_boundaries(&Boundary::digit_letter())","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59939,"byte_end":59997,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/         .to_case(Case::Snake)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":59998,"byte_end":60031,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60032,"byte_end":60038,"line_start":25,"line_end":25,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60039,"byte_end":60042,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let conv = Converter::new()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60043,"byte_end":60074,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/     .set_boundaries(&Boundary::list_from(\"aA \"))","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60075,"byte_end":60127,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/     .to_case(Case::Title);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60128,"byte_end":60158,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(\"7empest By Tool\", conv.convert(\"7empest byTool\"));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60159,"byte_end":60225,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":60226,"byte_end":60233,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63917,"byte_end":63926,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"list_from","qualname":"<Boundary>::list_from","value":"pub fn list_from(&str) -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns a list of all boundaries that are identified within the given string.\n Could be a short of writing out all the boundaries in a list directly.  This will not\n identify boundary `UpperLower` if it also used as part of `Acronym`.","sig":null,"attributes":[{"value":"/ Returns a list of all boundaries that are identified within the given string.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63157,"byte_end":63238,"line_start":140,"line_end":140,"column_start":5,"column_end":86}},{"value":"/ Could be a short of writing out all the boundaries in a list directly.  This will not","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63243,"byte_end":63332,"line_start":141,"line_end":141,"column_start":5,"column_end":94}},{"value":"/ identify boundary `UpperLower` if it also used as part of `Acronym`.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63337,"byte_end":63409,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63414,"byte_end":63417,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ If you want to be very explicit and not overlap boundaries, it is recommended to use a colon","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63422,"byte_end":63518,"line_start":144,"line_end":144,"column_start":5,"column_end":101}},{"value":"/ character.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63523,"byte_end":63537,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63542,"byte_end":63549,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63554,"byte_end":63585,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/ use Boundary::*;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63590,"byte_end":63610,"line_start":148,"line_end":148,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63615,"byte_end":63630,"line_start":149,"line_end":149,"column_start":5,"column_end":20}},{"value":"/     vec![Hyphen, Space, LowerUpper, UpperDigit, DigitLower],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63635,"byte_end":63699,"line_start":150,"line_end":150,"column_start":5,"column_end":69}},{"value":"/     Boundary::list_from(\"aA8a -\")","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63704,"byte_end":63741,"line_start":151,"line_end":151,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63746,"byte_end":63752,"line_start":152,"line_end":152,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63757,"byte_end":63772,"line_start":153,"line_end":153,"column_start":5,"column_end":20}},{"value":"/     vec![Underscore, LowerUpper, DigitUpper, Acronym],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63777,"byte_end":63835,"line_start":154,"line_end":154,"column_start":5,"column_end":63}},{"value":"/     Boundary::list_from(\"bD:0B:_:AAa\")","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63840,"byte_end":63882,"line_start":155,"line_end":155,"column_start":5,"column_end":47}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63887,"byte_end":63893,"line_start":156,"line_end":156,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63898,"byte_end":63905,"line_start":157,"line_end":157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65517,"byte_end":65525,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"defaults","qualname":"<Boundary>::defaults","value":"pub fn defaults() -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" The default list of boundaries used when `Casing::to_case` is called directly\n and in a `Converter` generated from `Converter::new()`.  This includes\n all the boundaries except the `UpperLower` boundary.\n ```\n use convert_case::Boundary;\n use Boundary::*;\n assert_eq!(\n     vec![\n         Underscore, Hyphen, Space, LowerUpper, UpperDigit, \n         DigitUpper, DigitLower, LowerDigit, Acronym,\n     ],\n     Boundary::defaults()\n );\n ```\n","sig":null,"attributes":[{"value":"/ The default list of boundaries used when `Casing::to_case` is called directly","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":64973,"byte_end":65054,"line_start":182,"line_end":182,"column_start":5,"column_end":86}},{"value":"/ and in a `Converter` generated from `Converter::new()`.  This includes","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65059,"byte_end":65133,"line_start":183,"line_end":183,"column_start":5,"column_end":79}},{"value":"/ all the boundaries except the `UpperLower` boundary.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65138,"byte_end":65194,"line_start":184,"line_end":184,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65199,"byte_end":65206,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65211,"byte_end":65242,"line_start":186,"line_end":186,"column_start":5,"column_end":36}},{"value":"/ use Boundary::*;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65247,"byte_end":65267,"line_start":187,"line_end":187,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65272,"byte_end":65287,"line_start":188,"line_end":188,"column_start":5,"column_end":20}},{"value":"/     vec![","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65292,"byte_end":65305,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/         Underscore, Hyphen, Space, LowerUpper, UpperDigit, ","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65310,"byte_end":65373,"line_start":190,"line_end":190,"column_start":5,"column_end":68}},{"value":"/         DigitUpper, DigitLower, LowerDigit, Acronym,","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65378,"byte_end":65434,"line_start":191,"line_end":191,"column_start":5,"column_end":61}},{"value":"/     ],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65439,"byte_end":65449,"line_start":192,"line_end":192,"column_start":5,"column_end":15}},{"value":"/     Boundary::defaults()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65454,"byte_end":65482,"line_start":193,"line_end":193,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65487,"byte_end":65493,"line_start":194,"line_end":194,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65498,"byte_end":65505,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66035,"byte_end":66041,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"delims","qualname":"<Boundary>::delims","value":"pub fn delims() -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the boundaries that split around single characters: `Hyphen`,\n `Underscore`, and `Space`.\n ```\n use convert_case::Boundary;\n use Boundary::*;\n assert_eq!(\n     vec![Hyphen, Underscore, Space],\n     Boundary::delims()\n );\n ```\n","sig":null,"attributes":[{"value":"/ Returns the boundaries that split around single characters: `Hyphen`,","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65723,"byte_end":65796,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ `Underscore`, and `Space`.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65801,"byte_end":65831,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65836,"byte_end":65843,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65848,"byte_end":65879,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/ use Boundary::*;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65884,"byte_end":65904,"line_start":208,"line_end":208,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65909,"byte_end":65924,"line_start":209,"line_end":209,"column_start":5,"column_end":20}},{"value":"/     vec![Hyphen, Underscore, Space],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65929,"byte_end":65969,"line_start":210,"line_end":210,"column_start":5,"column_end":45}},{"value":"/     Boundary::delims()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":65974,"byte_end":66000,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66005,"byte_end":66011,"line_start":212,"line_end":212,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66016,"byte_end":66023,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66475,"byte_end":66481,"line_start":229,"line_end":229,"column_start":12,"column_end":18},"name":"digits","qualname":"<Boundary>::digits","value":"pub fn digits() -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the boundaries that involve digits: `DigitUpper`, `DigitLower`, `UpperDigit`, and\n `LowerDigit`.\n ```\n use convert_case::Boundary;\n use Boundary::*;\n assert_eq!(\n     vec![DigitUpper, UpperDigit, DigitLower, LowerDigit],\n     Boundary::digits()\n );\n ```\n","sig":null,"attributes":[{"value":"/ Returns the boundaries that involve digits: `DigitUpper`, `DigitLower`, `UpperDigit`, and","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66135,"byte_end":66228,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ `LowerDigit`.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66233,"byte_end":66250,"line_start":220,"line_end":220,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66255,"byte_end":66262,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66267,"byte_end":66298,"line_start":222,"line_end":222,"column_start":5,"column_end":36}},{"value":"/ use Boundary::*;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66303,"byte_end":66323,"line_start":223,"line_end":223,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66328,"byte_end":66343,"line_start":224,"line_end":224,"column_start":5,"column_end":20}},{"value":"/     vec![DigitUpper, UpperDigit, DigitLower, LowerDigit],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66348,"byte_end":66409,"line_start":225,"line_end":225,"column_start":5,"column_end":66}},{"value":"/     Boundary::digits()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66414,"byte_end":66440,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66445,"byte_end":66451,"line_start":227,"line_end":227,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66456,"byte_end":66463,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66897,"byte_end":66909,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"letter_digit","qualname":"<Boundary>::letter_digit","value":"pub fn letter_digit() -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the boundaries that are letters followed by digits: `UpperDigit` and `LowerDigit`.\n ```\n use convert_case::Boundary;\n use Boundary::*;\n assert_eq!(\n     vec![UpperDigit, LowerDigit],\n     Boundary::letter_digit()\n );\n ```\n","sig":null,"attributes":[{"value":"/ Returns the boundaries that are letters followed by digits: `UpperDigit` and `LowerDigit`.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66596,"byte_end":66690,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66695,"byte_end":66702,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66707,"byte_end":66738,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/ use Boundary::*;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66743,"byte_end":66763,"line_start":237,"line_end":237,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66768,"byte_end":66783,"line_start":238,"line_end":238,"column_start":5,"column_end":20}},{"value":"/     vec![UpperDigit, LowerDigit],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66788,"byte_end":66825,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/     Boundary::letter_digit()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66830,"byte_end":66862,"line_start":240,"line_end":240,"column_start":5,"column_end":37}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66867,"byte_end":66873,"line_start":241,"line_end":241,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":66878,"byte_end":66885,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67309,"byte_end":67321,"line_start":258,"line_end":258,"column_start":12,"column_end":24},"name":"digit_letter","qualname":"<Boundary>::digit_letter","value":"pub fn digit_letter() -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the boundaries that are digits followed by letters: `DigitUpper` and\n `DigitLower`.\n ```\n use convert_case::Boundary;\n use Boundary::*;\n assert_eq!(\n     vec![DigitUpper, DigitLower],\n     Boundary::digit_letter()\n );\n ```\n","sig":null,"attributes":[{"value":"/ Returns the boundaries that are digits followed by letters: `DigitUpper` and","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67000,"byte_end":67080,"line_start":248,"line_end":248,"column_start":5,"column_end":85}},{"value":"/ `DigitLower`.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67085,"byte_end":67102,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67107,"byte_end":67114,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67119,"byte_end":67150,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/ use Boundary::*;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67155,"byte_end":67175,"line_start":252,"line_end":252,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67180,"byte_end":67195,"line_start":253,"line_end":253,"column_start":5,"column_end":20}},{"value":"/     vec![DigitUpper, DigitLower],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67200,"byte_end":67237,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/     Boundary::digit_letter()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67242,"byte_end":67274,"line_start":255,"line_end":255,"column_start":5,"column_end":37}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67279,"byte_end":67285,"line_start":256,"line_end":256,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67290,"byte_end":67297,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67892,"byte_end":67895,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"all","qualname":"<Boundary>::all","value":"pub fn all() -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns all boundaries.  Note that this includes the `UpperLower` variant which\n might be unhelpful.  Please look at [`Boundary::defaults`].\n ```\n use convert_case::Boundary;\n use Boundary::*;\n assert_eq!(\n     vec![\n         Hyphen, Underscore, Space, LowerUpper, UpperLower, DigitUpper,\n         UpperDigit, DigitLower, LowerDigit, Acronym,\n     ],\n     Boundary::all()\n );\n ```\n","sig":null,"attributes":[{"value":"/ Returns all boundaries.  Note that this includes the `UpperLower` variant which","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67412,"byte_end":67495,"line_start":263,"line_end":263,"column_start":5,"column_end":88}},{"value":"/ might be unhelpful.  Please look at [`Boundary::defaults`].","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67500,"byte_end":67563,"line_start":264,"line_end":264,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67568,"byte_end":67575,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ use convert_case::Boundary;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67580,"byte_end":67611,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/ use Boundary::*;","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67616,"byte_end":67636,"line_start":267,"line_end":267,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67641,"byte_end":67656,"line_start":268,"line_end":268,"column_start":5,"column_end":20}},{"value":"/     vec![","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67661,"byte_end":67674,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/         Hyphen, Underscore, Space, LowerUpper, UpperLower, DigitUpper,","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67679,"byte_end":67753,"line_start":270,"line_end":270,"column_start":5,"column_end":79}},{"value":"/         UpperDigit, DigitLower, LowerDigit, Acronym,","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67758,"byte_end":67814,"line_start":271,"line_end":271,"column_start":5,"column_end":61}},{"value":"/     ],","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67819,"byte_end":67829,"line_start":272,"line_end":272,"column_start":5,"column_end":15}},{"value":"/     Boundary::all()","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67834,"byte_end":67857,"line_start":273,"line_end":273,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67862,"byte_end":67868,"line_start":274,"line_end":274,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":67873,"byte_end":67880,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":133},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7942,"byte_end":7948,"line_start":207,"line_end":207,"column_start":11,"column_end":17},"name":"Casing","qualname":"::Casing","value":"Casing<T: AsRef<str>>","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138}],"decl_id":null,"docs":" Describes items that can be converted into a case.  This trait is used\n in conjunction with the [`StateConverter`] struct which is returned from a couple\n methods on `Casing`.","sig":null,"attributes":[{"value":"/ Describes items that can be converted into a case.  This trait is used","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7681,"byte_end":7755,"line_start":202,"line_end":202,"column_start":1,"column_end":75}},{"value":"/ in conjunction with the [`StateConverter`] struct which is returned from a couple","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7756,"byte_end":7841,"line_start":203,"line_end":203,"column_start":1,"column_end":86}},{"value":"/ methods on `Casing`.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7842,"byte_end":7866,"line_start":204,"line_end":204,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7867,"byte_end":7870,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ Implemented for strings `&str`, `String`, and `&String`.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7871,"byte_end":7931,"line_start":206,"line_end":206,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8404,"byte_end":8411,"line_start":220,"line_end":220,"column_start":8,"column_end":15},"name":"to_case","qualname":"::Casing::to_case","value":"pub fn to_case(&Self, Case) -> String","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Convert the string into the given case.  It will reference `self` and create a new\n `String` with the same pattern and delimeter as `case`.  It will split on boundaries\n defined at [`Boundary::defaults()`].\n ```\n use convert_case::{Case, Casing};","sig":null,"attributes":[{"value":"/ Convert the string into the given case.  It will reference `self` and create a new","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":7971,"byte_end":8057,"line_start":209,"line_end":209,"column_start":5,"column_end":91}},{"value":"/ `String` with the same pattern and delimeter as `case`.  It will split on boundaries","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8062,"byte_end":8150,"line_start":210,"line_end":210,"column_start":5,"column_end":93}},{"value":"/ defined at [`Boundary::defaults()`].","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8155,"byte_end":8195,"line_start":211,"line_end":211,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8200,"byte_end":8207,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8212,"byte_end":8249,"line_start":213,"line_end":213,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8254,"byte_end":8257,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8262,"byte_end":8277,"line_start":215,"line_end":215,"column_start":5,"column_end":20}},{"value":"/     \"tetronimo-piece-border\",","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8282,"byte_end":8315,"line_start":216,"line_end":216,"column_start":5,"column_end":38}},{"value":"/     \"Tetronimo piece border\".to_case(Case::Kebab)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8320,"byte_end":8373,"line_start":217,"line_end":217,"column_start":5,"column_end":58}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8378,"byte_end":8384,"line_start":218,"line_end":218,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8389,"byte_end":8396,"line_start":219,"line_end":219,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8808,"byte_end":8817,"line_start":233,"line_end":233,"column_start":8,"column_end":17},"name":"from_case","qualname":"::Casing::from_case","value":"pub fn from_case(&Self, Case) -> StateConverter<, T>","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Start the case conversion by storing the boundaries associated with the given case.\n ```\n use convert_case::{Case, Casing};","sig":null,"attributes":[{"value":"/ Start the case conversion by storing the boundaries associated with the given case.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8447,"byte_end":8534,"line_start":222,"line_end":222,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8539,"byte_end":8546,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8551,"byte_end":8588,"line_start":224,"line_end":224,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8593,"byte_end":8596,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8601,"byte_end":8616,"line_start":226,"line_end":226,"column_start":5,"column_end":20}},{"value":"/     \"2020-08-10_dannie_birthday\",","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8621,"byte_end":8658,"line_start":227,"line_end":227,"column_start":5,"column_end":42}},{"value":"/     \"2020-08-10 Dannie Birthday\"","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8663,"byte_end":8699,"line_start":228,"line_end":228,"column_start":5,"column_end":41}},{"value":"/         .from_case(Case::Title)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8704,"byte_end":8739,"line_start":229,"line_end":229,"column_start":5,"column_end":40}},{"value":"/         .to_case(Case::Snake)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8744,"byte_end":8777,"line_start":230,"line_end":230,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8782,"byte_end":8788,"line_start":231,"line_end":231,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8793,"byte_end":8800,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9241,"byte_end":9256,"line_start":247,"line_end":247,"column_start":8,"column_end":23},"name":"with_boundaries","qualname":"::Casing::with_boundaries","value":"pub fn with_boundaries(&Self, &[Boundary]) -> StateConverter<, T>","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Creates a `StateConverter` struct initialized with the boundaries\n provided.\n ```\n use convert_case::{Boundary, Case, Casing};","sig":null,"attributes":[{"value":"/ Creates a `StateConverter` struct initialized with the boundaries","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8864,"byte_end":8933,"line_start":235,"line_end":235,"column_start":5,"column_end":74}},{"value":"/ provided.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8938,"byte_end":8951,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8956,"byte_end":8963,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Boundary, Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":8968,"byte_end":9015,"line_start":238,"line_end":238,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9020,"byte_end":9023,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9028,"byte_end":9043,"line_start":240,"line_end":240,"column_start":5,"column_end":20}},{"value":"/     \"e1_m1_hangar\",","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9048,"byte_end":9071,"line_start":241,"line_end":241,"column_start":5,"column_end":28}},{"value":"/     \"E1M1 Hangar\"","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9076,"byte_end":9097,"line_start":242,"line_end":242,"column_start":5,"column_end":26}},{"value":"/         .with_boundaries(&[Boundary::DigitUpper, Boundary::Space])","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9102,"byte_end":9172,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"/         .to_case(Case::Snake)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9177,"byte_end":9210,"line_start":244,"line_end":244,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9215,"byte_end":9221,"line_start":245,"line_end":245,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9226,"byte_end":9233,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9779,"byte_end":9786,"line_start":260,"line_end":260,"column_start":8,"column_end":15},"name":"is_case","qualname":"::Casing::is_case","value":"pub fn is_case(&Self, Case) -> bool","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Determines if `self` is of the given case.  This is done simply by applying\n the conversion and seeing if the result is the same.\n ```\n use convert_case::{Case, Casing};\n \n assert!( \"kebab-case-string\".is_case(Case::Kebab));\n assert!( \"Train-Case-String\".is_case(Case::Train));","sig":null,"attributes":[{"value":"/ Determines if `self` is of the given case.  This is done simply by applying","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9308,"byte_end":9387,"line_start":249,"line_end":249,"column_start":5,"column_end":84}},{"value":"/ the conversion and seeing if the result is the same.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9392,"byte_end":9448,"line_start":250,"line_end":250,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9453,"byte_end":9460,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9465,"byte_end":9502,"line_start":252,"line_end":252,"column_start":5,"column_end":42}},{"value":"/ ","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9507,"byte_end":9511,"line_start":253,"line_end":253,"column_start":5,"column_end":9}},{"value":"/ assert!( \"kebab-case-string\".is_case(Case::Kebab));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9516,"byte_end":9571,"line_start":254,"line_end":254,"column_start":5,"column_end":60}},{"value":"/ assert!( \"Train-Case-String\".is_case(Case::Train));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9576,"byte_end":9631,"line_start":255,"line_end":255,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9636,"byte_end":9639,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ assert!(!\"kebab-case-string\".is_case(Case::Snake));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9644,"byte_end":9699,"line_start":257,"line_end":257,"column_start":5,"column_end":60}},{"value":"/ assert!(!\"kebab-case-string\".is_case(Case::Train));","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9704,"byte_end":9759,"line_start":258,"line_end":258,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9764,"byte_end":9771,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":145},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":10796,"byte_end":10810,"line_start":295,"line_end":295,"column_start":12,"column_end":26},"name":"StateConverter","qualname":"::StateConverter","value":"StateConverter {  }","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":" Holds information about parsing before converting into a case.","sig":null,"attributes":[{"value":"/ Holds information about parsing before converting into a case.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":10325,"byte_end":10391,"line_start":284,"line_end":284,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":10392,"byte_end":10395,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ This struct is used when invoking the `from_case` and `with_boundaries` methods on","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":10396,"byte_end":10482,"line_start":286,"line_end":286,"column_start":1,"column_end":87}},{"value":"/ `Casing`.  For a more fine grained approach to case conversion, consider using the [`Converter`]","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":10483,"byte_end":10583,"line_start":287,"line_end":287,"column_start":1,"column_end":101}},{"value":"/ struct.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":10584,"byte_end":10595,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":10596,"byte_end":10603,"line_start":289,"line_end":289,"column_start":1,"column_end":8}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":10604,"byte_end":10641,"line_start":290,"line_end":290,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":10642,"byte_end":10645,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ let title = \"ninety-nine_problems\".from_case(Case::Snake).to_case(Case::Title);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":10646,"byte_end":10729,"line_start":292,"line_end":292,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(\"Ninety-nine Problems\", title);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":10730,"byte_end":10776,"line_start":293,"line_end":293,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":10777,"byte_end":10784,"line_start":294,"line_end":294,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":11837,"byte_end":11846,"line_start":329,"line_end":329,"column_start":12,"column_end":21},"name":"from_case","qualname":"<StateConverter>::from_case","value":"pub fn from_case(Self, Case) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Uses the boundaries associated with `case` for word segmentation.  This\n will overwrite any boundary information initialized before.  This method is\n likely not useful, but provided anyway.\n ```\n use convert_case::{Case, Casing};","sig":null,"attributes":[{"value":"/ Uses the boundaries associated with `case` for word segmentation.  This","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":11288,"byte_end":11363,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ will overwrite any boundary information initialized before.  This method is","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":11368,"byte_end":11447,"line_start":318,"line_end":318,"column_start":5,"column_end":84}},{"value":"/ likely not useful, but provided anyway.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":11452,"byte_end":11495,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":11500,"byte_end":11507,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":11512,"byte_end":11549,"line_start":321,"line_end":321,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":11554,"byte_end":11557,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let name = \"Chuck Schuldiner\"","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":11562,"byte_end":11595,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/     .from_case(Case::Snake) // from Casing trait","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":11600,"byte_end":11652,"line_start":324,"line_end":324,"column_start":5,"column_end":57}},{"value":"/     .from_case(Case::Title) // from StateConverter, overwrites previous","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":11657,"byte_end":11732,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/     .to_case(Case::Kebab);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":11737,"byte_end":11767,"line_start":326,"line_end":326,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"chuck-schuldiner\", name);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":11772,"byte_end":11813,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":11818,"byte_end":11825,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12602,"byte_end":12617,"line_start":348,"line_end":348,"column_start":12,"column_end":27},"name":"with_boundaries","qualname":"<StateConverter>::with_boundaries","value":"pub fn with_boundaries(Self, &[Boundary]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Overwrites boundaries for word segmentation with those provided.  This will overwrite\n any boundary information initialized before.  This method is likely not useful, but\n provided anyway.\n ```\n use convert_case::{Boundary, Case, Casing};","sig":null,"attributes":[{"value":"/ Overwrites boundaries for word segmentation with those provided.  This will overwrite","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":11975,"byte_end":12064,"line_start":336,"line_end":336,"column_start":5,"column_end":94}},{"value":"/ any boundary information initialized before.  This method is likely not useful, but","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12069,"byte_end":12156,"line_start":337,"line_end":337,"column_start":5,"column_end":92}},{"value":"/ provided anyway.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12161,"byte_end":12181,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12186,"byte_end":12193,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Boundary, Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12198,"byte_end":12245,"line_start":340,"line_end":340,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12250,"byte_end":12253,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ let song = \"theHumbling river-puscifer\"","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12258,"byte_end":12301,"line_start":342,"line_end":342,"column_start":5,"column_end":48}},{"value":"/     .from_case(Case::Kebab) // from Casing trait","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12306,"byte_end":12358,"line_start":343,"line_end":343,"column_start":5,"column_end":57}},{"value":"/     .with_boundaries(&[Boundary::Space, Boundary::LowerUpper]) // overwrites `from_case`","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12363,"byte_end":12455,"line_start":344,"line_end":344,"column_start":5,"column_end":97}},{"value":"/     .to_case(Case::Pascal);","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12460,"byte_end":12491,"line_start":345,"line_end":345,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(\"TheHumblingRiver-puscifer\", song);  // doesn't split on hyphen `-`","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12496,"byte_end":12578,"line_start":346,"line_end":346,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12583,"byte_end":12590,"line_start":347,"line_end":347,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13288,"byte_end":13306,"line_start":369,"line_end":369,"column_start":12,"column_end":30},"name":"without_boundaries","qualname":"<StateConverter>::without_boundaries","value":"pub fn without_boundaries(Self, &[Boundary]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes any boundaries that were already initialized.  This is particularly useful when a\n case like `Case::Camel` has a lot of associated word boundaries, but you want to exclude\n some.\n ```\n use convert_case::{Boundary, Case, Casing};","sig":null,"attributes":[{"value":"/ Removes any boundaries that were already initialized.  This is particularly useful when a","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12758,"byte_end":12851,"line_start":355,"line_end":355,"column_start":5,"column_end":98}},{"value":"/ case like `Case::Camel` has a lot of associated word boundaries, but you want to exclude","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12856,"byte_end":12948,"line_start":356,"line_end":356,"column_start":5,"column_end":97}},{"value":"/ some.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12953,"byte_end":12962,"line_start":357,"line_end":357,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12967,"byte_end":12974,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Boundary, Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":12979,"byte_end":13026,"line_start":359,"line_end":359,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13031,"byte_end":13034,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13039,"byte_end":13054,"line_start":361,"line_end":361,"column_start":5,"column_end":20}},{"value":"/     \"2d_transformation\",","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13059,"byte_end":13087,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/     \"2dTransformation\"","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13092,"byte_end":13118,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/         .from_case(Case::Camel)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13123,"byte_end":13158,"line_start":364,"line_end":364,"column_start":5,"column_end":40}},{"value":"/         .without_boundaries(&Boundary::digits())","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13163,"byte_end":13215,"line_start":365,"line_end":365,"column_start":5,"column_end":57}},{"value":"/         .to_case(Case::Snake)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13220,"byte_end":13253,"line_start":366,"line_end":366,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13258,"byte_end":13264,"line_start":367,"line_end":367,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13269,"byte_end":13276,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13751,"byte_end":13758,"line_start":385,"line_end":385,"column_start":12,"column_end":19},"name":"to_case","qualname":"<StateConverter>::to_case","value":"pub fn to_case(Self, Case) -> String","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `StateConverter` and returns the converted string.\n ```\n use convert_case::{Boundary, Case, Casing};","sig":null,"attributes":[{"value":"/ Consumes the `StateConverter` and returns the converted string.","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13450,"byte_end":13517,"line_start":376,"line_end":376,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13522,"byte_end":13529,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ use convert_case::{Boundary, Case, Casing};","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13534,"byte_end":13581,"line_start":378,"line_end":378,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13586,"byte_end":13589,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13594,"byte_end":13609,"line_start":380,"line_end":380,"column_start":5,"column_end":20}},{"value":"/     \"ice-cream social\",","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13614,"byte_end":13641,"line_start":381,"line_end":381,"column_start":5,"column_end":32}},{"value":"/     \"Ice-Cream Social\".from_case(Case::Title).to_case(Case::Lower)","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13646,"byte_end":13716,"line_start":382,"line_end":382,"column_start":5,"column_end":75}},{"value":"/ );","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13721,"byte_end":13727,"line_start":383,"line_end":383,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":13732,"byte_end":13739,"line_start":384,"line_end":384,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":29893,"byte_end":29897,"line_start":236,"line_end":236,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37656,"byte_end":37665,"line_start":70,"line_end":70,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37846,"byte_end":37855,"line_start":80,"line_end":80,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":47646,"byte_end":47654,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":52903,"byte_end":52910,"line_start":165,"line_end":165,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63142,"byte_end":63150,"line_start":139,"line_end":139,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9852,"byte_end":9853,"line_start":263,"line_end":263,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":10894,"byte_end":10908,"line_start":300,"line_end":300,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/case.rs","byte_start":29893,"byte_end":29897,"line_start":236,"line_end":236,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37656,"byte_end":37665,"line_start":70,"line_end":70,"column_start":18,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":35},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/converter.rs","byte_start":37846,"byte_end":37855,"line_start":80,"line_end":80,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":47646,"byte_end":47654,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/pattern.rs","byte_start":52903,"byte_end":52910,"line_start":165,"line_end":165,"column_start":6,"column_end":13},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/segmentation.rs","byte_start":63142,"byte_end":63150,"line_start":139,"line_end":139,"column_start":6,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":9852,"byte_end":9853,"line_start":263,"line_end":263,"column_start":35,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":133}},{"span":{"file_name":"/Users/novyjpolzovatel/.cargo/registry/src/github.com-1ecc6299db9ec823/convert_case-0.5.0/src/lib.rs","byte_start":10894,"byte_end":10908,"line_start":300,"line_end":300,"column_start":25,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":145},"to":{"krate":4294967295,"index":4294967295}}]}